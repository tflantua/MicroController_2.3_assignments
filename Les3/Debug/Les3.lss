
Les3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000008ea  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000a4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005b  00000000  00000000  000008ea  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000088  00000000  00000000  00000945  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000011af  00000000  00000000  000009cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000009d8  00000000  00000000  00001b7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000055b  00000000  00000000  00002554  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000010c  00000000  00000000  00002ab0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000294  00000000  00000000  00002bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000328  00000000  00000000  00002e50  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000068  00000000  00000000  00003178  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000872  00000872  000008e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000031e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.wait    0000001e  000007e6  000007e6  0000085a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.lcd_strobe_lcd_e 00000026  00000778  00000778  000007ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.init_4bits_mode 00000042  000006fe  000006fe  00000772  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.lcd_write_data 00000024  0000079e  0000079e  00000812  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.display_text 0000001a  00000804  00000804  00000878  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.lcd_write_command 00000024  000007c2  000007c2  00000836  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.lcd_clear 0000001a  0000081e  0000081e  00000892  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.init    00000016  00000838  00000838  000008ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .progmemx.data 00000011  000000a4  000000a4  00000118  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 22 .text.opdracht1 00000064  0000063a  0000063a  000006ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.main    00000016  0000084e  0000084e  000008c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.avrlibc 00000060  0000069e  0000069e  00000712  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.avrlibc 00000450  000000b6  000000b6  0000012a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.avrlibc 00000038  00000740  00000740  000007b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.avrlibc 00000078  000005c2  000005c2  00000636  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.avrlibc 000000bc  00000506  00000506  0000057a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.libgcc  0000000e  00000864  00000864  000008d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
   8:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
   c:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  10:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  14:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  18:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  1c:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  20:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  24:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  28:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  2c:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  30:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  34:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  38:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  3c:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  40:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  44:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  48:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  4c:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  50:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  54:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  58:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  5c:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  60:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  64:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  68:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  6c:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  70:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  74:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  78:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  7c:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  80:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  84:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>
  88:	0c 94 39 04 	jmp	0x872	; 0x872 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0e 94 27 04 	call	0x84e	; 0x84e <main>
  9c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <_exit>

000000a0 <_exit>:
  a0:	f8 94       	cli

000000a2 <__stop_program>:
  a2:	ff cf       	rjmp	.-2      	; 0xa2 <__stop_program>

Disassembly of section .text:

00000872 <__bad_interrupt>:
 872:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.wait:

000007e6 <wait>:
clock value is set. This is used by _delay_ms inside
util/delay.h
Version :    	DMK, Initial code
*******************************************************************/
void wait( int ms ) {
	for (int i=0; i<ms; i++) {
 7e6:	20 e0       	ldi	r18, 0x00	; 0
 7e8:	30 e0       	ldi	r19, 0x00	; 0
 7ea:	08 c0       	rjmp	.+16     	; 0x7fc <wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7ec:	ef ec       	ldi	r30, 0xCF	; 207
 7ee:	f7 e0       	ldi	r31, 0x07	; 7
 7f0:	31 97       	sbiw	r30, 0x01	; 1
 7f2:	f1 f7       	brne	.-4      	; 0x7f0 <wait+0xa>
 7f4:	00 c0       	rjmp	.+0      	; 0x7f6 <wait+0x10>
 7f6:	00 00       	nop
 7f8:	2f 5f       	subi	r18, 0xFF	; 255
 7fa:	3f 4f       	sbci	r19, 0xFF	; 255
 7fc:	28 17       	cp	r18, r24
 7fe:	39 07       	cpc	r19, r25
 800:	ac f3       	brlt	.-22     	; 0x7ec <wait+0x6>
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}
 802:	08 95       	ret

Disassembly of section .text.lcd_strobe_lcd_e:

00000778 <lcd_strobe_lcd_e>:
outputs:
notes:			According datasheet HD44780
Version :    	DMK, Initial code
*******************************************************************/
void lcd_strobe_lcd_e(void) {
	PORTA |= (1<<LCD_E);	// E high
 778:	8b b3       	in	r24, 0x1b	; 27
 77a:	80 64       	ori	r24, 0x40	; 64
 77c:	8b bb       	out	0x1b, r24	; 27
 77e:	8f ec       	ldi	r24, 0xCF	; 207
 780:	97 e0       	ldi	r25, 0x07	; 7
 782:	01 97       	sbiw	r24, 0x01	; 1
 784:	f1 f7       	brne	.-4      	; 0x782 <lcd_strobe_lcd_e+0xa>
 786:	00 c0       	rjmp	.+0      	; 0x788 <lcd_strobe_lcd_e+0x10>
 788:	00 00       	nop
	_delay_ms(1);			// nodig
	PORTA &= ~(1<<LCD_E);  	// E low
 78a:	8b b3       	in	r24, 0x1b	; 27
 78c:	8f 7b       	andi	r24, 0xBF	; 191
 78e:	8b bb       	out	0x1b, r24	; 27
 790:	8f ec       	ldi	r24, 0xCF	; 207
 792:	97 e0       	ldi	r25, 0x07	; 7
 794:	01 97       	sbiw	r24, 0x01	; 1
 796:	f1 f7       	brne	.-4      	; 0x794 <lcd_strobe_lcd_e+0x1c>
 798:	00 c0       	rjmp	.+0      	; 0x79a <lcd_strobe_lcd_e+0x22>
 79a:	00 00       	nop
 79c:	08 95       	ret

Disassembly of section .text.init_4bits_mode:

000006fe <init_4bits_mode>:
inputs:
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void init_4bits_mode(void) {
 6fe:	cf 93       	push	r28
	// PORTC output mode and all low (also E and RS pin)
	DDRD = 0xFF;
 700:	8f ef       	ldi	r24, 0xFF	; 255
 702:	81 bb       	out	0x11, r24	; 17
	DDRA = 0xFF;
 704:	8a bb       	out	0x1a, r24	; 26
	PORTC = 0x00;
 706:	15 ba       	out	0x15, r1	; 21
	PORTA = 0x00;
 708:	1b ba       	out	0x1b, r1	; 27
	//PORTA = 0xFF;

	// Step 2 (table 12)
	PORTC = 0x20;	// function set
 70a:	c0 e2       	ldi	r28, 0x20	; 32
 70c:	c5 bb       	out	0x15, r28	; 21
	lcd_strobe_lcd_e();
 70e:	0e 94 bc 03 	call	0x778	; 0x778 <lcd_strobe_lcd_e>

	// Step 3 (table 12)
	PORTC = 0x20;   // function set
 712:	c5 bb       	out	0x15, r28	; 21
	lcd_strobe_lcd_e();
 714:	0e 94 bc 03 	call	0x778	; 0x778 <lcd_strobe_lcd_e>
	PORTC = 0x80;
 718:	80 e8       	ldi	r24, 0x80	; 128
 71a:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 71c:	0e 94 bc 03 	call	0x778	; 0x778 <lcd_strobe_lcd_e>

	// Step 4 (table 12)
	PORTC = 0x00;   // Display on/off control
 720:	15 ba       	out	0x15, r1	; 21
	lcd_strobe_lcd_e();
 722:	0e 94 bc 03 	call	0x778	; 0x778 <lcd_strobe_lcd_e>
	PORTC = 0xF0;
 726:	80 ef       	ldi	r24, 0xF0	; 240
 728:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 72a:	0e 94 bc 03 	call	0x778	; 0x778 <lcd_strobe_lcd_e>

	// Step 4 (table 12)
	PORTC = 0x00;   // Entry mode set
 72e:	15 ba       	out	0x15, r1	; 21
	lcd_strobe_lcd_e();
 730:	0e 94 bc 03 	call	0x778	; 0x778 <lcd_strobe_lcd_e>
	PORTC = 0x60;
 734:	80 e6       	ldi	r24, 0x60	; 96
 736:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 738:	0e 94 bc 03 	call	0x778	; 0x778 <lcd_strobe_lcd_e>
}
 73c:	cf 91       	pop	r28
 73e:	08 95       	ret

Disassembly of section .text.lcd_write_data:

0000079e <lcd_write_data>:
inputs:			byte - written to LCD
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void lcd_write_data(unsigned char byte) {
 79e:	cf 93       	push	r28
 7a0:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 7a2:	85 bb       	out	0x15, r24	; 21
	PORTA |= (1<<LCD_RS);
 7a4:	8b b3       	in	r24, 0x1b	; 27
 7a6:	80 61       	ori	r24, 0x10	; 16
 7a8:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 7aa:	0e 94 bc 03 	call	0x778	; 0x778 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 7ae:	c2 95       	swap	r28
 7b0:	c0 7f       	andi	r28, 0xF0	; 240
 7b2:	c5 bb       	out	0x15, r28	; 21
	PORTA |= (1<<LCD_RS);
 7b4:	8b b3       	in	r24, 0x1b	; 27
 7b6:	80 61       	ori	r24, 0x10	; 16
 7b8:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 7ba:	0e 94 bc 03 	call	0x778	; 0x778 <lcd_strobe_lcd_e>
}
 7be:	cf 91       	pop	r28
 7c0:	08 95       	ret

Disassembly of section .text.display_text:

00000804 <display_text>:
inputs:
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void display_text(char *str) {
 804:	cf 93       	push	r28
 806:	df 93       	push	r29
 808:	ec 01       	movw	r28, r24
	// while(*str) {
	// 	lcd_write_data(*str++);
	// }

	// of met een for:
	for(;*str; str++){
 80a:	03 c0       	rjmp	.+6      	; 0x812 <display_text+0xe>
		lcd_write_data(*str);
 80c:	0e 94 cf 03 	call	0x79e	; 0x79e <lcd_write_data>
	// while(*str) {
	// 	lcd_write_data(*str++);
	// }

	// of met een for:
	for(;*str; str++){
 810:	21 96       	adiw	r28, 0x01	; 1
 812:	88 81       	ld	r24, Y
 814:	81 11       	cpse	r24, r1
 816:	fa cf       	rjmp	.-12     	; 0x80c <display_text+0x8>
		lcd_write_data(*str);
	}
}
 818:	df 91       	pop	r29
 81a:	cf 91       	pop	r28
 81c:	08 95       	ret

Disassembly of section .text.lcd_write_command:

000007c2 <lcd_write_command>:
inputs:			byte - written to LCD
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void lcd_write_command(unsigned char byte) {
 7c2:	cf 93       	push	r28
 7c4:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 7c6:	85 bb       	out	0x15, r24	; 21
	PORTA &= ~(1<<LCD_RS);
 7c8:	8b b3       	in	r24, 0x1b	; 27
 7ca:	8f 7e       	andi	r24, 0xEF	; 239
 7cc:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 7ce:	0e 94 bc 03 	call	0x778	; 0x778 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 7d2:	c2 95       	swap	r28
 7d4:	c0 7f       	andi	r28, 0xF0	; 240
 7d6:	c5 bb       	out	0x15, r28	; 21
	PORTA &= ~(1<<LCD_RS);
 7d8:	8b b3       	in	r24, 0x1b	; 27
 7da:	8f 7e       	andi	r24, 0xEF	; 239
 7dc:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 7de:	0e 94 bc 03 	call	0x778	; 0x778 <lcd_strobe_lcd_e>
}
 7e2:	cf 91       	pop	r28
 7e4:	08 95       	ret

Disassembly of section .text.lcd_clear:

0000081e <lcd_clear>:


void lcd_clear() {
	lcd_write_command (0x01);						//Leeg display
 81e:	81 e0       	ldi	r24, 0x01	; 1
 820:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <lcd_write_command>
 824:	8f e9       	ldi	r24, 0x9F	; 159
 826:	9f e0       	ldi	r25, 0x0F	; 15
 828:	01 97       	sbiw	r24, 0x01	; 1
 82a:	f1 f7       	brne	.-4      	; 0x828 <lcd_clear+0xa>
 82c:	00 c0       	rjmp	.+0      	; 0x82e <lcd_clear+0x10>
 82e:	00 00       	nop
	_delay_ms(2);
	lcd_write_command (0x80);						//Cursor terug naar start
 830:	80 e8       	ldi	r24, 0x80	; 128
 832:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <lcd_write_command>
 836:	08 95       	ret

Disassembly of section .text.init:

00000838 <init>:

void init()
{
	
	// Init LCD
	init_4bits_mode();
 838:	0e 94 7f 03 	call	0x6fe	; 0x6fe <init_4bits_mode>
 83c:	8f e1       	ldi	r24, 0x1F	; 31
 83e:	9e e4       	ldi	r25, 0x4E	; 78
 840:	01 97       	sbiw	r24, 0x01	; 1
 842:	f1 f7       	brne	.-4      	; 0x840 <init+0x8>
 844:	00 c0       	rjmp	.+0      	; 0x846 <init+0xe>
 846:	00 00       	nop
	
	_delay_ms(10);
	
	lcd_clear();
 848:	0e 94 0f 04 	call	0x81e	; 0x81e <lcd_clear>
 84c:	08 95       	ret

Disassembly of section .text.opdracht1:

0000063a <opdracht1>:
	_delay_ms(500);
	opdracht1();
}


void opdracht1(){
 63a:	cf 93       	push	r28
 63c:	df 93       	push	r29
 63e:	cd b7       	in	r28, 0x3d	; 61
 640:	de b7       	in	r29, 0x3e	; 62
 642:	64 97       	sbiw	r28, 0x14	; 20
 644:	0f b6       	in	r0, 0x3f	; 63
 646:	f8 94       	cli
 648:	de bf       	out	0x3e, r29	; 62
 64a:	0f be       	out	0x3f, r0	; 63
 64c:	cd bf       	out	0x3d, r28	; 61
	DDRC = 0xFF;			// PORTD(7) output, PORTD(6:0) input
 64e:	1f ef       	ldi	r17, 0xFF	; 255
 650:	14 bb       	out	0x14, r17	; 20
	PORTC = 0xFF;
 652:	15 bb       	out	0x15, r17	; 21
	
	init();
 654:	0e 94 1c 04 	call	0x838	; 0x838 <init>
	
	DDRA=0xff;
 658:	1a bb       	out	0x1a, r17	; 26
	DDRD = 0x00;
 65a:	11 ba       	out	0x11, r1	; 17
	
	TCCR2 = 0b00000111;
 65c:	87 e0       	ldi	r24, 0x07	; 7
 65e:	85 bd       	out	0x25, r24	; 37

	while(1){
		char text[20];
		sprintf(text, "Hoeveel keer: %d", TCNT2);
 660:	84 b5       	in	r24, 0x24	; 36
 662:	1f 92       	push	r1
 664:	8f 93       	push	r24
 666:	84 ea       	ldi	r24, 0xA4	; 164
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	a0 e0       	ldi	r26, 0x00	; 0
 66c:	af 93       	push	r26
 66e:	9f 93       	push	r25
 670:	8f 93       	push	r24
 672:	8e 01       	movw	r16, r28
 674:	0f 5f       	subi	r16, 0xFF	; 255
 676:	1f 4f       	sbci	r17, 0xFF	; 255
 678:	1f 93       	push	r17
 67a:	0f 93       	push	r16
 67c:	0e 94 4f 03 	call	0x69e	; 0x69e <sprintf>
		
		display_text(text);
 680:	c8 01       	movw	r24, r16
 682:	0e 94 02 04 	call	0x804	; 0x804 <display_text>
		
		wait(100);
 686:	84 e6       	ldi	r24, 0x64	; 100
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <wait>
		
		lcd_clear();
 68e:	0e 94 0f 04 	call	0x81e	; 0x81e <lcd_clear>
 692:	0f b6       	in	r0, 0x3f	; 63
 694:	f8 94       	cli
 696:	de bf       	out	0x3e, r29	; 62
 698:	0f be       	out	0x3f, r0	; 63
 69a:	cd bf       	out	0x3d, r28	; 61
 69c:	e1 cf       	rjmp	.-62     	; 0x660 <opdracht1+0x26>

Disassembly of section .text.main:

0000084e <main>:
 84e:	2f ef       	ldi	r18, 0xFF	; 255
 850:	84 e3       	ldi	r24, 0x34	; 52
 852:	9c e0       	ldi	r25, 0x0C	; 12
 854:	21 50       	subi	r18, 0x01	; 1
 856:	80 40       	sbci	r24, 0x00	; 0
 858:	90 40       	sbci	r25, 0x00	; 0
 85a:	e1 f7       	brne	.-8      	; 0x854 <main+0x6>
 85c:	00 c0       	rjmp	.+0      	; 0x85e <main+0x10>
 85e:	00 00       	nop


int main(void)
{
	_delay_ms(500);
	opdracht1();
 860:	0e 94 1d 03 	call	0x63a	; 0x63a <opdracht1>

Disassembly of section .text.avrlibc:

0000069e <sprintf>:
 69e:	0f 93       	push	r16
 6a0:	1f 93       	push	r17
 6a2:	cf 93       	push	r28
 6a4:	df 93       	push	r29
 6a6:	cd b7       	in	r28, 0x3d	; 61
 6a8:	de b7       	in	r29, 0x3e	; 62
 6aa:	2f 97       	sbiw	r28, 0x0f	; 15
 6ac:	0f b6       	in	r0, 0x3f	; 63
 6ae:	f8 94       	cli
 6b0:	de bf       	out	0x3e, r29	; 62
 6b2:	0f be       	out	0x3f, r0	; 63
 6b4:	cd bf       	out	0x3d, r28	; 61
 6b6:	0e 89       	ldd	r16, Y+22	; 0x16
 6b8:	1f 89       	ldd	r17, Y+23	; 0x17
 6ba:	86 e0       	ldi	r24, 0x06	; 6
 6bc:	8d 83       	std	Y+5, r24	; 0x05
 6be:	1a 83       	std	Y+2, r17	; 0x02
 6c0:	09 83       	std	Y+1, r16	; 0x01
 6c2:	8f ef       	ldi	r24, 0xFF	; 255
 6c4:	9f e7       	ldi	r25, 0x7F	; 127
 6c6:	9f 83       	std	Y+7, r25	; 0x07
 6c8:	8e 83       	std	Y+6, r24	; 0x06
 6ca:	9e 01       	movw	r18, r28
 6cc:	25 5e       	subi	r18, 0xE5	; 229
 6ce:	3f 4f       	sbci	r19, 0xFF	; 255
 6d0:	48 8d       	ldd	r20, Y+24	; 0x18
 6d2:	59 8d       	ldd	r21, Y+25	; 0x19
 6d4:	6a 8d       	ldd	r22, Y+26	; 0x1a
 6d6:	ce 01       	movw	r24, r28
 6d8:	01 96       	adiw	r24, 0x01	; 1
 6da:	0e 94 5b 00 	call	0xb6	; 0xb6 <vfprintf>
 6de:	e8 85       	ldd	r30, Y+8	; 0x08
 6e0:	f9 85       	ldd	r31, Y+9	; 0x09
 6e2:	e0 0f       	add	r30, r16
 6e4:	f1 1f       	adc	r31, r17
 6e6:	10 82       	st	Z, r1
 6e8:	2f 96       	adiw	r28, 0x0f	; 15
 6ea:	0f b6       	in	r0, 0x3f	; 63
 6ec:	f8 94       	cli
 6ee:	de bf       	out	0x3e, r29	; 62
 6f0:	0f be       	out	0x3f, r0	; 63
 6f2:	cd bf       	out	0x3d, r28	; 61
 6f4:	df 91       	pop	r29
 6f6:	cf 91       	pop	r28
 6f8:	1f 91       	pop	r17
 6fa:	0f 91       	pop	r16
 6fc:	08 95       	ret

Disassembly of section .text.avrlibc:

000000b6 <vfprintf>:
  b6:	2f 92       	push	r2
  b8:	3f 92       	push	r3
  ba:	4f 92       	push	r4
  bc:	6f 92       	push	r6
  be:	7f 92       	push	r7
  c0:	8f 92       	push	r8
  c2:	9f 92       	push	r9
  c4:	af 92       	push	r10
  c6:	bf 92       	push	r11
  c8:	cf 92       	push	r12
  ca:	df 92       	push	r13
  cc:	ef 92       	push	r14
  ce:	ff 92       	push	r15
  d0:	0f 93       	push	r16
  d2:	1f 93       	push	r17
  d4:	cf 93       	push	r28
  d6:	df 93       	push	r29
  d8:	cd b7       	in	r28, 0x3d	; 61
  da:	de b7       	in	r29, 0x3e	; 62
  dc:	62 97       	sbiw	r28, 0x12	; 18
  de:	0f b6       	in	r0, 0x3f	; 63
  e0:	f8 94       	cli
  e2:	de bf       	out	0x3e, r29	; 62
  e4:	0f be       	out	0x3f, r0	; 63
  e6:	cd bf       	out	0x3d, r28	; 61
  e8:	6c 01       	movw	r12, r24
  ea:	3a 01       	movw	r6, r20
  ec:	86 2e       	mov	r8, r22
  ee:	79 01       	movw	r14, r18
  f0:	fc 01       	movw	r30, r24
  f2:	10 86       	std	Z+8, r1	; 0x08
  f4:	17 82       	std	Z+7, r1	; 0x07
  f6:	84 81       	ldd	r24, Z+4	; 0x04
  f8:	81 ff       	sbrs	r24, 1
  fa:	eb c1       	rjmp	.+982    	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
  fc:	9e 01       	movw	r18, r28
  fe:	2f 5f       	subi	r18, 0xFF	; 255
 100:	3f 4f       	sbci	r19, 0xFF	; 255
 102:	3d 87       	std	Y+13, r19	; 0x0d
 104:	2c 87       	std	Y+12, r18	; 0x0c
 106:	c9 01       	movw	r24, r18
 108:	a0 e8       	ldi	r26, 0x80	; 128
 10a:	88 8b       	std	Y+16, r24	; 0x10
 10c:	99 8b       	std	Y+17, r25	; 0x11
 10e:	aa 8b       	std	Y+18, r26	; 0x12
 110:	9f e3       	ldi	r25, 0x3F	; 63
 112:	99 2e       	mov	r9, r25
 114:	f3 01       	movw	r30, r6
 116:	58 2d       	mov	r21, r8
 118:	0e 94 32 04 	call	0x864	; 0x864 <__xload_1>
 11c:	86 2f       	mov	r24, r22
 11e:	66 23       	and	r22, r22
 120:	09 f4       	brne	.+2      	; 0x124 <vfprintf+0x6e>
 122:	d3 c1       	rjmp	.+934    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 124:	48 2d       	mov	r20, r8
 126:	93 01       	movw	r18, r6
 128:	2f 5f       	subi	r18, 0xFF	; 255
 12a:	3f 4f       	sbci	r19, 0xFF	; 255
 12c:	4f 4f       	sbci	r20, 0xFF	; 255
 12e:	65 32       	cpi	r22, 0x25	; 37
 130:	19 f0       	breq	.+6      	; 0x138 <vfprintf+0x82>
 132:	39 01       	movw	r6, r18
 134:	84 2e       	mov	r8, r20
 136:	0b c0       	rjmp	.+22     	; 0x14e <vfprintf+0x98>
 138:	f9 01       	movw	r30, r18
 13a:	54 2f       	mov	r21, r20
 13c:	0e 94 32 04 	call	0x864	; 0x864 <__xload_1>
 140:	86 2f       	mov	r24, r22
 142:	92 e0       	ldi	r25, 0x02	; 2
 144:	69 0e       	add	r6, r25
 146:	71 1c       	adc	r7, r1
 148:	81 1c       	adc	r8, r1
 14a:	65 32       	cpi	r22, 0x25	; 37
 14c:	29 f4       	brne	.+10     	; 0x158 <vfprintf+0xa2>
 14e:	b6 01       	movw	r22, r12
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <fputc>
 156:	de cf       	rjmp	.-68     	; 0x114 <vfprintf+0x5e>
 158:	b1 2c       	mov	r11, r1
 15a:	00 e0       	ldi	r16, 0x00	; 0
 15c:	10 e0       	ldi	r17, 0x00	; 0
 15e:	10 32       	cpi	r17, 0x20	; 32
 160:	a0 f4       	brcc	.+40     	; 0x18a <vfprintf+0xd4>
 162:	8b 32       	cpi	r24, 0x2B	; 43
 164:	69 f0       	breq	.+26     	; 0x180 <vfprintf+0xca>
 166:	30 f4       	brcc	.+12     	; 0x174 <vfprintf+0xbe>
 168:	80 32       	cpi	r24, 0x20	; 32
 16a:	59 f0       	breq	.+22     	; 0x182 <vfprintf+0xcc>
 16c:	83 32       	cpi	r24, 0x23	; 35
 16e:	69 f4       	brne	.+26     	; 0x18a <vfprintf+0xd4>
 170:	10 61       	ori	r17, 0x10	; 16
 172:	2c c0       	rjmp	.+88     	; 0x1cc <vfprintf+0x116>
 174:	8d 32       	cpi	r24, 0x2D	; 45
 176:	39 f0       	breq	.+14     	; 0x186 <vfprintf+0xd0>
 178:	80 33       	cpi	r24, 0x30	; 48
 17a:	39 f4       	brne	.+14     	; 0x18a <vfprintf+0xd4>
 17c:	11 60       	ori	r17, 0x01	; 1
 17e:	26 c0       	rjmp	.+76     	; 0x1cc <vfprintf+0x116>
 180:	12 60       	ori	r17, 0x02	; 2
 182:	14 60       	ori	r17, 0x04	; 4
 184:	23 c0       	rjmp	.+70     	; 0x1cc <vfprintf+0x116>
 186:	18 60       	ori	r17, 0x08	; 8
 188:	21 c0       	rjmp	.+66     	; 0x1cc <vfprintf+0x116>
 18a:	17 fd       	sbrc	r17, 7
 18c:	2a c0       	rjmp	.+84     	; 0x1e2 <vfprintf+0x12c>
 18e:	90 ed       	ldi	r25, 0xD0	; 208
 190:	98 0f       	add	r25, r24
 192:	9a 30       	cpi	r25, 0x0A	; 10
 194:	78 f4       	brcc	.+30     	; 0x1b4 <vfprintf+0xfe>
 196:	16 ff       	sbrs	r17, 6
 198:	06 c0       	rjmp	.+12     	; 0x1a6 <vfprintf+0xf0>
 19a:	aa e0       	ldi	r26, 0x0A	; 10
 19c:	ba 9e       	mul	r11, r26
 19e:	90 0d       	add	r25, r0
 1a0:	11 24       	eor	r1, r1
 1a2:	b9 2e       	mov	r11, r25
 1a4:	13 c0       	rjmp	.+38     	; 0x1cc <vfprintf+0x116>
 1a6:	ea e0       	ldi	r30, 0x0A	; 10
 1a8:	0e 9f       	mul	r16, r30
 1aa:	90 0d       	add	r25, r0
 1ac:	11 24       	eor	r1, r1
 1ae:	09 2f       	mov	r16, r25
 1b0:	10 62       	ori	r17, 0x20	; 32
 1b2:	0c c0       	rjmp	.+24     	; 0x1cc <vfprintf+0x116>
 1b4:	8e 32       	cpi	r24, 0x2E	; 46
 1b6:	21 f4       	brne	.+8      	; 0x1c0 <vfprintf+0x10a>
 1b8:	16 fd       	sbrc	r17, 6
 1ba:	87 c1       	rjmp	.+782    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 1bc:	10 64       	ori	r17, 0x40	; 64
 1be:	06 c0       	rjmp	.+12     	; 0x1cc <vfprintf+0x116>
 1c0:	8c 36       	cpi	r24, 0x6C	; 108
 1c2:	11 f4       	brne	.+4      	; 0x1c8 <vfprintf+0x112>
 1c4:	10 68       	ori	r17, 0x80	; 128
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <vfprintf+0x116>
 1c8:	88 36       	cpi	r24, 0x68	; 104
 1ca:	59 f4       	brne	.+22     	; 0x1e2 <vfprintf+0x12c>
 1cc:	f3 01       	movw	r30, r6
 1ce:	58 2d       	mov	r21, r8
 1d0:	0e 94 32 04 	call	0x864	; 0x864 <__xload_1>
 1d4:	86 2f       	mov	r24, r22
 1d6:	ff ef       	ldi	r31, 0xFF	; 255
 1d8:	6f 1a       	sub	r6, r31
 1da:	7f 0a       	sbc	r7, r31
 1dc:	8f 0a       	sbc	r8, r31
 1de:	61 11       	cpse	r22, r1
 1e0:	be cf       	rjmp	.-132    	; 0x15e <vfprintf+0xa8>
 1e2:	98 2f       	mov	r25, r24
 1e4:	9f 7d       	andi	r25, 0xDF	; 223
 1e6:	95 54       	subi	r25, 0x45	; 69
 1e8:	93 30       	cpi	r25, 0x03	; 3
 1ea:	28 f4       	brcc	.+10     	; 0x1f6 <vfprintf+0x140>
 1ec:	24 e0       	ldi	r18, 0x04	; 4
 1ee:	e2 0e       	add	r14, r18
 1f0:	f1 1c       	adc	r15, r1
 1f2:	99 82       	std	Y+1, r9	; 0x01
 1f4:	0f c0       	rjmp	.+30     	; 0x214 <vfprintf+0x15e>
 1f6:	83 36       	cpi	r24, 0x63	; 99
 1f8:	31 f0       	breq	.+12     	; 0x206 <vfprintf+0x150>
 1fa:	83 37       	cpi	r24, 0x73	; 115
 1fc:	91 f0       	breq	.+36     	; 0x222 <vfprintf+0x16c>
 1fe:	83 35       	cpi	r24, 0x53	; 83
 200:	09 f0       	breq	.+2      	; 0x204 <vfprintf+0x14e>
 202:	64 c0       	rjmp	.+200    	; 0x2cc <vfprintf+0x216>
 204:	27 c0       	rjmp	.+78     	; 0x254 <vfprintf+0x19e>
 206:	f7 01       	movw	r30, r14
 208:	80 81       	ld	r24, Z
 20a:	89 83       	std	Y+1, r24	; 0x01
 20c:	97 01       	movw	r18, r14
 20e:	2e 5f       	subi	r18, 0xFE	; 254
 210:	3f 4f       	sbci	r19, 0xFF	; 255
 212:	79 01       	movw	r14, r18
 214:	28 88       	ldd	r2, Y+16	; 0x10
 216:	39 88       	ldd	r3, Y+17	; 0x11
 218:	4a 88       	ldd	r4, Y+18	; 0x12
 21a:	aa 24       	eor	r10, r10
 21c:	a3 94       	inc	r10
 21e:	b1 2c       	mov	r11, r1
 220:	17 c0       	rjmp	.+46     	; 0x250 <vfprintf+0x19a>
 222:	a7 01       	movw	r20, r14
 224:	4d 5f       	subi	r20, 0xFD	; 253
 226:	5f 4f       	sbci	r21, 0xFF	; 255
 228:	5f 87       	std	Y+15, r21	; 0x0f
 22a:	4e 87       	std	Y+14, r20	; 0x0e
 22c:	f7 01       	movw	r30, r14
 22e:	20 80       	ld	r2, Z
 230:	31 80       	ldd	r3, Z+1	; 0x01
 232:	42 80       	ldd	r4, Z+2	; 0x02
 234:	16 ff       	sbrs	r17, 6
 236:	03 c0       	rjmp	.+6      	; 0x23e <vfprintf+0x188>
 238:	4b 2d       	mov	r20, r11
 23a:	50 e0       	ldi	r21, 0x00	; 0
 23c:	02 c0       	rjmp	.+4      	; 0x242 <vfprintf+0x18c>
 23e:	4f ef       	ldi	r20, 0xFF	; 255
 240:	5f ef       	ldi	r21, 0xFF	; 255
 242:	84 2d       	mov	r24, r4
 244:	b1 01       	movw	r22, r2
 246:	0e 94 a0 03 	call	0x740	; 0x740 <strnlen>
 24a:	5c 01       	movw	r10, r24
 24c:	ee 84       	ldd	r14, Y+14	; 0x0e
 24e:	ff 84       	ldd	r15, Y+15	; 0x0f
 250:	1f 77       	andi	r17, 0x7F	; 127
 252:	18 c0       	rjmp	.+48     	; 0x284 <vfprintf+0x1ce>
 254:	97 01       	movw	r18, r14
 256:	2d 5f       	subi	r18, 0xFD	; 253
 258:	3f 4f       	sbci	r19, 0xFF	; 255
 25a:	3f 87       	std	Y+15, r19	; 0x0f
 25c:	2e 87       	std	Y+14, r18	; 0x0e
 25e:	f7 01       	movw	r30, r14
 260:	20 80       	ld	r2, Z
 262:	31 80       	ldd	r3, Z+1	; 0x01
 264:	42 80       	ldd	r4, Z+2	; 0x02
 266:	16 ff       	sbrs	r17, 6
 268:	03 c0       	rjmp	.+6      	; 0x270 <vfprintf+0x1ba>
 26a:	4b 2d       	mov	r20, r11
 26c:	50 e0       	ldi	r21, 0x00	; 0
 26e:	02 c0       	rjmp	.+4      	; 0x274 <vfprintf+0x1be>
 270:	4f ef       	ldi	r20, 0xFF	; 255
 272:	5f ef       	ldi	r21, 0xFF	; 255
 274:	84 2d       	mov	r24, r4
 276:	b1 01       	movw	r22, r2
 278:	0e 94 a0 03 	call	0x740	; 0x740 <strnlen>
 27c:	5c 01       	movw	r10, r24
 27e:	10 68       	ori	r17, 0x80	; 128
 280:	ee 84       	ldd	r14, Y+14	; 0x0e
 282:	ff 84       	ldd	r15, Y+15	; 0x0f
 284:	13 fd       	sbrc	r17, 3
 286:	1e c0       	rjmp	.+60     	; 0x2c4 <vfprintf+0x20e>
 288:	80 2f       	mov	r24, r16
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	a8 16       	cp	r10, r24
 28e:	b9 06       	cpc	r11, r25
 290:	c8 f4       	brcc	.+50     	; 0x2c4 <vfprintf+0x20e>
 292:	b6 01       	movw	r22, r12
 294:	80 e2       	ldi	r24, 0x20	; 32
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <fputc>
 29c:	01 50       	subi	r16, 0x01	; 1
 29e:	f4 cf       	rjmp	.-24     	; 0x288 <vfprintf+0x1d2>
 2a0:	f1 01       	movw	r30, r2
 2a2:	54 2d       	mov	r21, r4
 2a4:	0e 94 32 04 	call	0x864	; 0x864 <__xload_1>
 2a8:	86 2f       	mov	r24, r22
 2aa:	ff ef       	ldi	r31, 0xFF	; 255
 2ac:	2f 1a       	sub	r2, r31
 2ae:	3f 0a       	sbc	r3, r31
 2b0:	4f 0a       	sbc	r4, r31
 2b2:	b6 01       	movw	r22, r12
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <fputc>
 2ba:	01 11       	cpse	r16, r1
 2bc:	01 50       	subi	r16, 0x01	; 1
 2be:	21 e0       	ldi	r18, 0x01	; 1
 2c0:	a2 1a       	sub	r10, r18
 2c2:	b1 08       	sbc	r11, r1
 2c4:	a1 14       	cp	r10, r1
 2c6:	b1 04       	cpc	r11, r1
 2c8:	59 f7       	brne	.-42     	; 0x2a0 <vfprintf+0x1ea>
 2ca:	f5 c0       	rjmp	.+490    	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 2cc:	84 36       	cpi	r24, 0x64	; 100
 2ce:	11 f0       	breq	.+4      	; 0x2d4 <vfprintf+0x21e>
 2d0:	89 36       	cpi	r24, 0x69	; 105
 2d2:	71 f5       	brne	.+92     	; 0x330 <vfprintf+0x27a>
 2d4:	f7 01       	movw	r30, r14
 2d6:	17 ff       	sbrs	r17, 7
 2d8:	08 c0       	rjmp	.+16     	; 0x2ea <vfprintf+0x234>
 2da:	60 81       	ld	r22, Z
 2dc:	71 81       	ldd	r23, Z+1	; 0x01
 2de:	82 81       	ldd	r24, Z+2	; 0x02
 2e0:	93 81       	ldd	r25, Z+3	; 0x03
 2e2:	97 01       	movw	r18, r14
 2e4:	2c 5f       	subi	r18, 0xFC	; 252
 2e6:	3f 4f       	sbci	r19, 0xFF	; 255
 2e8:	09 c0       	rjmp	.+18     	; 0x2fc <vfprintf+0x246>
 2ea:	60 81       	ld	r22, Z
 2ec:	71 81       	ldd	r23, Z+1	; 0x01
 2ee:	07 2e       	mov	r0, r23
 2f0:	00 0c       	add	r0, r0
 2f2:	88 0b       	sbc	r24, r24
 2f4:	99 0b       	sbc	r25, r25
 2f6:	97 01       	movw	r18, r14
 2f8:	2e 5f       	subi	r18, 0xFE	; 254
 2fa:	3f 4f       	sbci	r19, 0xFF	; 255
 2fc:	79 01       	movw	r14, r18
 2fe:	1f 76       	andi	r17, 0x6F	; 111
 300:	31 2e       	mov	r3, r17
 302:	97 ff       	sbrs	r25, 7
 304:	0a c0       	rjmp	.+20     	; 0x31a <vfprintf+0x264>
 306:	90 95       	com	r25
 308:	80 95       	com	r24
 30a:	70 95       	com	r23
 30c:	61 95       	neg	r22
 30e:	7f 4f       	sbci	r23, 0xFF	; 255
 310:	8f 4f       	sbci	r24, 0xFF	; 255
 312:	9f 4f       	sbci	r25, 0xFF	; 255
 314:	31 2f       	mov	r19, r17
 316:	30 68       	ori	r19, 0x80	; 128
 318:	33 2e       	mov	r3, r19
 31a:	2a e0       	ldi	r18, 0x0A	; 10
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	ae 01       	movw	r20, r28
 320:	4f 5f       	subi	r20, 0xFF	; 255
 322:	5f 4f       	sbci	r21, 0xFF	; 255
 324:	0e 94 83 02 	call	0x506	; 0x506 <__ultoa_invert>
 328:	48 2e       	mov	r4, r24
 32a:	4c 85       	ldd	r20, Y+12	; 0x0c
 32c:	44 1a       	sub	r4, r20
 32e:	4a c0       	rjmp	.+148    	; 0x3c4 <vfprintf+0x30e>
 330:	85 37       	cpi	r24, 0x75	; 117
 332:	29 f4       	brne	.+10     	; 0x33e <vfprintf+0x288>
 334:	1f 7e       	andi	r17, 0xEF	; 239
 336:	a1 2e       	mov	r10, r17
 338:	2a e0       	ldi	r18, 0x0A	; 10
 33a:	30 e0       	ldi	r19, 0x00	; 0
 33c:	25 c0       	rjmp	.+74     	; 0x388 <vfprintf+0x2d2>
 33e:	51 2f       	mov	r21, r17
 340:	59 7f       	andi	r21, 0xF9	; 249
 342:	a5 2e       	mov	r10, r21
 344:	8f 36       	cpi	r24, 0x6F	; 111
 346:	c1 f0       	breq	.+48     	; 0x378 <vfprintf+0x2c2>
 348:	18 f4       	brcc	.+6      	; 0x350 <vfprintf+0x29a>
 34a:	88 35       	cpi	r24, 0x58	; 88
 34c:	79 f0       	breq	.+30     	; 0x36c <vfprintf+0x2b6>
 34e:	bd c0       	rjmp	.+378    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 350:	80 37       	cpi	r24, 0x70	; 112
 352:	19 f0       	breq	.+6      	; 0x35a <vfprintf+0x2a4>
 354:	88 37       	cpi	r24, 0x78	; 120
 356:	21 f0       	breq	.+8      	; 0x360 <vfprintf+0x2aa>
 358:	b8 c0       	rjmp	.+368    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 35a:	85 2f       	mov	r24, r21
 35c:	80 61       	ori	r24, 0x10	; 16
 35e:	a8 2e       	mov	r10, r24
 360:	a4 fe       	sbrs	r10, 4
 362:	0d c0       	rjmp	.+26     	; 0x37e <vfprintf+0x2c8>
 364:	9a 2d       	mov	r25, r10
 366:	94 60       	ori	r25, 0x04	; 4
 368:	a9 2e       	mov	r10, r25
 36a:	09 c0       	rjmp	.+18     	; 0x37e <vfprintf+0x2c8>
 36c:	14 ff       	sbrs	r17, 4
 36e:	0a c0       	rjmp	.+20     	; 0x384 <vfprintf+0x2ce>
 370:	a5 2f       	mov	r26, r21
 372:	a6 60       	ori	r26, 0x06	; 6
 374:	aa 2e       	mov	r10, r26
 376:	06 c0       	rjmp	.+12     	; 0x384 <vfprintf+0x2ce>
 378:	28 e0       	ldi	r18, 0x08	; 8
 37a:	30 e0       	ldi	r19, 0x00	; 0
 37c:	05 c0       	rjmp	.+10     	; 0x388 <vfprintf+0x2d2>
 37e:	20 e1       	ldi	r18, 0x10	; 16
 380:	30 e0       	ldi	r19, 0x00	; 0
 382:	02 c0       	rjmp	.+4      	; 0x388 <vfprintf+0x2d2>
 384:	20 e1       	ldi	r18, 0x10	; 16
 386:	32 e0       	ldi	r19, 0x02	; 2
 388:	f7 01       	movw	r30, r14
 38a:	a7 fe       	sbrs	r10, 7
 38c:	08 c0       	rjmp	.+16     	; 0x39e <vfprintf+0x2e8>
 38e:	60 81       	ld	r22, Z
 390:	71 81       	ldd	r23, Z+1	; 0x01
 392:	82 81       	ldd	r24, Z+2	; 0x02
 394:	93 81       	ldd	r25, Z+3	; 0x03
 396:	a7 01       	movw	r20, r14
 398:	4c 5f       	subi	r20, 0xFC	; 252
 39a:	5f 4f       	sbci	r21, 0xFF	; 255
 39c:	07 c0       	rjmp	.+14     	; 0x3ac <vfprintf+0x2f6>
 39e:	60 81       	ld	r22, Z
 3a0:	71 81       	ldd	r23, Z+1	; 0x01
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	a7 01       	movw	r20, r14
 3a8:	4e 5f       	subi	r20, 0xFE	; 254
 3aa:	5f 4f       	sbci	r21, 0xFF	; 255
 3ac:	7a 01       	movw	r14, r20
 3ae:	ae 01       	movw	r20, r28
 3b0:	4f 5f       	subi	r20, 0xFF	; 255
 3b2:	5f 4f       	sbci	r21, 0xFF	; 255
 3b4:	0e 94 83 02 	call	0x506	; 0x506 <__ultoa_invert>
 3b8:	48 2e       	mov	r4, r24
 3ba:	5c 85       	ldd	r21, Y+12	; 0x0c
 3bc:	45 1a       	sub	r4, r21
 3be:	8a 2d       	mov	r24, r10
 3c0:	8f 77       	andi	r24, 0x7F	; 127
 3c2:	38 2e       	mov	r3, r24
 3c4:	36 fe       	sbrs	r3, 6
 3c6:	0d c0       	rjmp	.+26     	; 0x3e2 <vfprintf+0x32c>
 3c8:	93 2d       	mov	r25, r3
 3ca:	9e 7f       	andi	r25, 0xFE	; 254
 3cc:	a9 2e       	mov	r10, r25
 3ce:	4b 14       	cp	r4, r11
 3d0:	58 f4       	brcc	.+22     	; 0x3e8 <vfprintf+0x332>
 3d2:	34 fe       	sbrs	r3, 4
 3d4:	0b c0       	rjmp	.+22     	; 0x3ec <vfprintf+0x336>
 3d6:	32 fc       	sbrc	r3, 2
 3d8:	09 c0       	rjmp	.+18     	; 0x3ec <vfprintf+0x336>
 3da:	a3 2d       	mov	r26, r3
 3dc:	ae 7e       	andi	r26, 0xEE	; 238
 3de:	aa 2e       	mov	r10, r26
 3e0:	05 c0       	rjmp	.+10     	; 0x3ec <vfprintf+0x336>
 3e2:	14 2d       	mov	r17, r4
 3e4:	a3 2c       	mov	r10, r3
 3e6:	03 c0       	rjmp	.+6      	; 0x3ee <vfprintf+0x338>
 3e8:	14 2d       	mov	r17, r4
 3ea:	01 c0       	rjmp	.+2      	; 0x3ee <vfprintf+0x338>
 3ec:	1b 2d       	mov	r17, r11
 3ee:	a4 fe       	sbrs	r10, 4
 3f0:	0e c0       	rjmp	.+28     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3f2:	fe 01       	movw	r30, r28
 3f4:	e4 0d       	add	r30, r4
 3f6:	f1 1d       	adc	r31, r1
 3f8:	80 81       	ld	r24, Z
 3fa:	80 33       	cpi	r24, 0x30	; 48
 3fc:	21 f4       	brne	.+8      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fe:	ea 2d       	mov	r30, r10
 400:	e9 7e       	andi	r30, 0xE9	; 233
 402:	ae 2e       	mov	r10, r30
 404:	08 c0       	rjmp	.+16     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 406:	a2 fe       	sbrs	r10, 2
 408:	05 c0       	rjmp	.+10     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 40a:	1e 5f       	subi	r17, 0xFE	; 254
 40c:	04 c0       	rjmp	.+8      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 40e:	8a 2d       	mov	r24, r10
 410:	86 78       	andi	r24, 0x86	; 134
 412:	09 f0       	breq	.+2      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 414:	1f 5f       	subi	r17, 0xFF	; 255
 416:	a3 fc       	sbrc	r10, 3
 418:	11 c0       	rjmp	.+34     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 41a:	a0 fe       	sbrs	r10, 0
 41c:	06 c0       	rjmp	.+12     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41e:	10 17       	cp	r17, r16
 420:	88 f4       	brcc	.+34     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 422:	04 0d       	add	r16, r4
 424:	b0 2e       	mov	r11, r16
 426:	b1 1a       	sub	r11, r17
 428:	0e c0       	rjmp	.+28     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 42a:	10 17       	cp	r17, r16
 42c:	60 f4       	brcc	.+24     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 42e:	b6 01       	movw	r22, r12
 430:	80 e2       	ldi	r24, 0x20	; 32
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <fputc>
 438:	1f 5f       	subi	r17, 0xFF	; 255
 43a:	f7 cf       	rjmp	.-18     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 43c:	10 17       	cp	r17, r16
 43e:	18 f4       	brcc	.+6      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 440:	01 1b       	sub	r16, r17
 442:	02 c0       	rjmp	.+4      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 444:	b4 2c       	mov	r11, r4
 446:	00 e0       	ldi	r16, 0x00	; 0
 448:	a4 fe       	sbrs	r10, 4
 44a:	10 c0       	rjmp	.+32     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 44c:	b6 01       	movw	r22, r12
 44e:	80 e3       	ldi	r24, 0x30	; 48
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <fputc>
 456:	a2 fe       	sbrs	r10, 2
 458:	17 c0       	rjmp	.+46     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 45a:	a1 fc       	sbrc	r10, 1
 45c:	03 c0       	rjmp	.+6      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 45e:	88 e7       	ldi	r24, 0x78	; 120
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	02 c0       	rjmp	.+4      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 464:	88 e5       	ldi	r24, 0x58	; 88
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	b6 01       	movw	r22, r12
 46a:	0c c0       	rjmp	.+24     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 46c:	8a 2d       	mov	r24, r10
 46e:	86 78       	andi	r24, 0x86	; 134
 470:	59 f0       	breq	.+22     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 472:	a1 fe       	sbrs	r10, 1
 474:	02 c0       	rjmp	.+4      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 476:	8b e2       	ldi	r24, 0x2B	; 43
 478:	01 c0       	rjmp	.+2      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 47a:	80 e2       	ldi	r24, 0x20	; 32
 47c:	a7 fc       	sbrc	r10, 7
 47e:	8d e2       	ldi	r24, 0x2D	; 45
 480:	b6 01       	movw	r22, r12
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <fputc>
 488:	4b 14       	cp	r4, r11
 48a:	38 f4       	brcc	.+14     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 48c:	b6 01       	movw	r22, r12
 48e:	80 e3       	ldi	r24, 0x30	; 48
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <fputc>
 496:	ba 94       	dec	r11
 498:	f7 cf       	rjmp	.-18     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 49a:	4a 94       	dec	r4
 49c:	e1 e0       	ldi	r30, 0x01	; 1
 49e:	f0 e0       	ldi	r31, 0x00	; 0
 4a0:	ec 0f       	add	r30, r28
 4a2:	fd 1f       	adc	r31, r29
 4a4:	e4 0d       	add	r30, r4
 4a6:	f1 1d       	adc	r31, r1
 4a8:	80 81       	ld	r24, Z
 4aa:	b6 01       	movw	r22, r12
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <fputc>
 4b2:	41 10       	cpse	r4, r1
 4b4:	f2 cf       	rjmp	.-28     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 4b6:	00 23       	and	r16, r16
 4b8:	09 f4       	brne	.+2      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4ba:	2c ce       	rjmp	.-936    	; 0x114 <vfprintf+0x5e>
 4bc:	b6 01       	movw	r22, r12
 4be:	80 e2       	ldi	r24, 0x20	; 32
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <fputc>
 4c6:	01 50       	subi	r16, 0x01	; 1
 4c8:	f6 cf       	rjmp	.-20     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4ca:	f6 01       	movw	r30, r12
 4cc:	87 81       	ldd	r24, Z+7	; 0x07
 4ce:	90 85       	ldd	r25, Z+8	; 0x08
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4d2:	8f ef       	ldi	r24, 0xFF	; 255
 4d4:	9f ef       	ldi	r25, 0xFF	; 255
 4d6:	62 96       	adiw	r28, 0x12	; 18
 4d8:	0f b6       	in	r0, 0x3f	; 63
 4da:	f8 94       	cli
 4dc:	de bf       	out	0x3e, r29	; 62
 4de:	0f be       	out	0x3f, r0	; 63
 4e0:	cd bf       	out	0x3d, r28	; 61
 4e2:	df 91       	pop	r29
 4e4:	cf 91       	pop	r28
 4e6:	1f 91       	pop	r17
 4e8:	0f 91       	pop	r16
 4ea:	ff 90       	pop	r15
 4ec:	ef 90       	pop	r14
 4ee:	df 90       	pop	r13
 4f0:	cf 90       	pop	r12
 4f2:	bf 90       	pop	r11
 4f4:	af 90       	pop	r10
 4f6:	9f 90       	pop	r9
 4f8:	8f 90       	pop	r8
 4fa:	7f 90       	pop	r7
 4fc:	6f 90       	pop	r6
 4fe:	4f 90       	pop	r4
 500:	3f 90       	pop	r3
 502:	2f 90       	pop	r2
 504:	08 95       	ret

Disassembly of section .text.avrlibc:

00000740 <strnlen>:
 740:	cf 92       	push	r12
 742:	df 92       	push	r13
 744:	ef 92       	push	r14
 746:	6b 01       	movw	r12, r22
 748:	e8 2e       	mov	r14, r24
 74a:	9a 01       	movw	r18, r20
 74c:	a8 2f       	mov	r26, r24
 74e:	cb 01       	movw	r24, r22
 750:	21 15       	cp	r18, r1
 752:	31 05       	cpc	r19, r1
 754:	31 f4       	brne	.+12     	; 0x762 <strnlen+0x22>
 756:	8c 19       	sub	r24, r12
 758:	9d 09       	sbc	r25, r13
 75a:	ef 90       	pop	r14
 75c:	df 90       	pop	r13
 75e:	cf 90       	pop	r12
 760:	08 95       	ret
 762:	fc 01       	movw	r30, r24
 764:	5a 2f       	mov	r21, r26
 766:	0e 94 32 04 	call	0x864	; 0x864 <__xload_1>
 76a:	66 23       	and	r22, r22
 76c:	a1 f3       	breq	.-24     	; 0x756 <strnlen+0x16>
 76e:	01 96       	adiw	r24, 0x01	; 1
 770:	a1 1d       	adc	r26, r1
 772:	21 50       	subi	r18, 0x01	; 1
 774:	31 09       	sbc	r19, r1
 776:	ec cf       	rjmp	.-40     	; 0x750 <strnlen+0x10>

Disassembly of section .text.avrlibc:

000005c2 <fputc>:
 5c2:	0f 93       	push	r16
 5c4:	1f 93       	push	r17
 5c6:	cf 93       	push	r28
 5c8:	df 93       	push	r29
 5ca:	fb 01       	movw	r30, r22
 5cc:	24 81       	ldd	r18, Z+4	; 0x04
 5ce:	21 fd       	sbrc	r18, 1
 5d0:	03 c0       	rjmp	.+6      	; 0x5d8 <fputc+0x16>
 5d2:	8f ef       	ldi	r24, 0xFF	; 255
 5d4:	9f ef       	ldi	r25, 0xFF	; 255
 5d6:	2c c0       	rjmp	.+88     	; 0x630 <fputc+0x6e>
 5d8:	22 ff       	sbrs	r18, 2
 5da:	16 c0       	rjmp	.+44     	; 0x608 <fputc+0x46>
 5dc:	47 81       	ldd	r20, Z+7	; 0x07
 5de:	50 85       	ldd	r21, Z+8	; 0x08
 5e0:	25 81       	ldd	r18, Z+5	; 0x05
 5e2:	36 81       	ldd	r19, Z+6	; 0x06
 5e4:	42 17       	cp	r20, r18
 5e6:	53 07       	cpc	r21, r19
 5e8:	44 f4       	brge	.+16     	; 0x5fa <fputc+0x38>
 5ea:	a0 81       	ld	r26, Z
 5ec:	b1 81       	ldd	r27, Z+1	; 0x01
 5ee:	9d 01       	movw	r18, r26
 5f0:	2f 5f       	subi	r18, 0xFF	; 255
 5f2:	3f 4f       	sbci	r19, 0xFF	; 255
 5f4:	31 83       	std	Z+1, r19	; 0x01
 5f6:	20 83       	st	Z, r18
 5f8:	8c 93       	st	X, r24
 5fa:	27 81       	ldd	r18, Z+7	; 0x07
 5fc:	30 85       	ldd	r19, Z+8	; 0x08
 5fe:	2f 5f       	subi	r18, 0xFF	; 255
 600:	3f 4f       	sbci	r19, 0xFF	; 255
 602:	30 87       	std	Z+8, r19	; 0x08
 604:	27 83       	std	Z+7, r18	; 0x07
 606:	14 c0       	rjmp	.+40     	; 0x630 <fputc+0x6e>
 608:	8b 01       	movw	r16, r22
 60a:	ec 01       	movw	r28, r24
 60c:	fb 01       	movw	r30, r22
 60e:	01 84       	ldd	r0, Z+9	; 0x09
 610:	f2 85       	ldd	r31, Z+10	; 0x0a
 612:	e0 2d       	mov	r30, r0
 614:	09 95       	icall
 616:	89 2b       	or	r24, r25
 618:	e1 f6       	brne	.-72     	; 0x5d2 <fputc+0x10>
 61a:	d8 01       	movw	r26, r16
 61c:	17 96       	adiw	r26, 0x07	; 7
 61e:	8d 91       	ld	r24, X+
 620:	9c 91       	ld	r25, X
 622:	18 97       	sbiw	r26, 0x08	; 8
 624:	01 96       	adiw	r24, 0x01	; 1
 626:	18 96       	adiw	r26, 0x08	; 8
 628:	9c 93       	st	X, r25
 62a:	8e 93       	st	-X, r24
 62c:	17 97       	sbiw	r26, 0x07	; 7
 62e:	ce 01       	movw	r24, r28
 630:	df 91       	pop	r29
 632:	cf 91       	pop	r28
 634:	1f 91       	pop	r17
 636:	0f 91       	pop	r16
 638:	08 95       	ret

Disassembly of section .text.avrlibc:

00000506 <__ultoa_invert>:
 506:	fa 01       	movw	r30, r20
 508:	aa 27       	eor	r26, r26
 50a:	28 30       	cpi	r18, 0x08	; 8
 50c:	51 f1       	breq	.+84     	; 0x562 <__ultoa_invert+0x5c>
 50e:	20 31       	cpi	r18, 0x10	; 16
 510:	81 f1       	breq	.+96     	; 0x572 <__ultoa_invert+0x6c>
 512:	e8 94       	clt
 514:	6f 93       	push	r22
 516:	6e 7f       	andi	r22, 0xFE	; 254
 518:	6e 5f       	subi	r22, 0xFE	; 254
 51a:	7f 4f       	sbci	r23, 0xFF	; 255
 51c:	8f 4f       	sbci	r24, 0xFF	; 255
 51e:	9f 4f       	sbci	r25, 0xFF	; 255
 520:	af 4f       	sbci	r26, 0xFF	; 255
 522:	b1 e0       	ldi	r27, 0x01	; 1
 524:	3e d0       	rcall	.+124    	; 0x5a2 <__ultoa_invert+0x9c>
 526:	b4 e0       	ldi	r27, 0x04	; 4
 528:	3c d0       	rcall	.+120    	; 0x5a2 <__ultoa_invert+0x9c>
 52a:	67 0f       	add	r22, r23
 52c:	78 1f       	adc	r23, r24
 52e:	89 1f       	adc	r24, r25
 530:	9a 1f       	adc	r25, r26
 532:	a1 1d       	adc	r26, r1
 534:	68 0f       	add	r22, r24
 536:	79 1f       	adc	r23, r25
 538:	8a 1f       	adc	r24, r26
 53a:	91 1d       	adc	r25, r1
 53c:	a1 1d       	adc	r26, r1
 53e:	6a 0f       	add	r22, r26
 540:	71 1d       	adc	r23, r1
 542:	81 1d       	adc	r24, r1
 544:	91 1d       	adc	r25, r1
 546:	a1 1d       	adc	r26, r1
 548:	20 d0       	rcall	.+64     	; 0x58a <__ultoa_invert+0x84>
 54a:	09 f4       	brne	.+2      	; 0x54e <__ultoa_invert+0x48>
 54c:	68 94       	set
 54e:	3f 91       	pop	r19
 550:	2a e0       	ldi	r18, 0x0A	; 10
 552:	26 9f       	mul	r18, r22
 554:	11 24       	eor	r1, r1
 556:	30 19       	sub	r19, r0
 558:	30 5d       	subi	r19, 0xD0	; 208
 55a:	31 93       	st	Z+, r19
 55c:	de f6       	brtc	.-74     	; 0x514 <__ultoa_invert+0xe>
 55e:	cf 01       	movw	r24, r30
 560:	08 95       	ret
 562:	46 2f       	mov	r20, r22
 564:	47 70       	andi	r20, 0x07	; 7
 566:	40 5d       	subi	r20, 0xD0	; 208
 568:	41 93       	st	Z+, r20
 56a:	b3 e0       	ldi	r27, 0x03	; 3
 56c:	0f d0       	rcall	.+30     	; 0x58c <__ultoa_invert+0x86>
 56e:	c9 f7       	brne	.-14     	; 0x562 <__ultoa_invert+0x5c>
 570:	f6 cf       	rjmp	.-20     	; 0x55e <__ultoa_invert+0x58>
 572:	46 2f       	mov	r20, r22
 574:	4f 70       	andi	r20, 0x0F	; 15
 576:	40 5d       	subi	r20, 0xD0	; 208
 578:	4a 33       	cpi	r20, 0x3A	; 58
 57a:	18 f0       	brcs	.+6      	; 0x582 <__ultoa_invert+0x7c>
 57c:	49 5d       	subi	r20, 0xD9	; 217
 57e:	31 fd       	sbrc	r19, 1
 580:	40 52       	subi	r20, 0x20	; 32
 582:	41 93       	st	Z+, r20
 584:	02 d0       	rcall	.+4      	; 0x58a <__ultoa_invert+0x84>
 586:	a9 f7       	brne	.-22     	; 0x572 <__ultoa_invert+0x6c>
 588:	ea cf       	rjmp	.-44     	; 0x55e <__ultoa_invert+0x58>
 58a:	b4 e0       	ldi	r27, 0x04	; 4
 58c:	a6 95       	lsr	r26
 58e:	97 95       	ror	r25
 590:	87 95       	ror	r24
 592:	77 95       	ror	r23
 594:	67 95       	ror	r22
 596:	ba 95       	dec	r27
 598:	c9 f7       	brne	.-14     	; 0x58c <__ultoa_invert+0x86>
 59a:	00 97       	sbiw	r24, 0x00	; 0
 59c:	61 05       	cpc	r22, r1
 59e:	71 05       	cpc	r23, r1
 5a0:	08 95       	ret
 5a2:	9b 01       	movw	r18, r22
 5a4:	ac 01       	movw	r20, r24
 5a6:	0a 2e       	mov	r0, r26
 5a8:	06 94       	lsr	r0
 5aa:	57 95       	ror	r21
 5ac:	47 95       	ror	r20
 5ae:	37 95       	ror	r19
 5b0:	27 95       	ror	r18
 5b2:	ba 95       	dec	r27
 5b4:	c9 f7       	brne	.-14     	; 0x5a8 <__ultoa_invert+0xa2>
 5b6:	62 0f       	add	r22, r18
 5b8:	73 1f       	adc	r23, r19
 5ba:	84 1f       	adc	r24, r20
 5bc:	95 1f       	adc	r25, r21
 5be:	a0 1d       	adc	r26, r0
 5c0:	08 95       	ret

Disassembly of section .text.libgcc:

00000864 <__xload_1>:
 864:	57 fd       	sbrc	r21, 7
 866:	03 c0       	rjmp	.+6      	; 0x86e <__xload_1+0xa>
 868:	5b bf       	out	0x3b, r21	; 59
 86a:	67 91       	elpm	r22, Z+
 86c:	08 95       	ret
 86e:	60 81       	ld	r22, Z
 870:	08 95       	ret
