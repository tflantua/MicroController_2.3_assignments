
ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000008ae  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000a4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005b  00000000  00000000  000008ae  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000090  00000000  00000000  00000909  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000135a  00000000  00000000  00000999  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000009f8  00000000  00000000  00001cf3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000005c0  00000000  00000000  000026eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000100  00000000  00000000  00002cac  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000002b7  00000000  00000000  00002dac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000002cb  00000000  00000000  00003063  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000060  00000000  00000000  0000332e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000856  00000856  000008aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003390  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.lcd_strobe_lcd_e 0000001e  000007bc  000007bc  00000810  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.init_4bits_mode 00000042  000006fa  000006fa  0000074e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.lcd_write_data 00000024  00000774  00000774  000007c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.display_text 0000001a  00000814  00000814  00000868  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.lcd_write_command 00000024  00000798  00000798  000007ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.lcd_clear 0000001a  0000082e  0000082e  00000882  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.lcd_init 0000001c  000007f8  000007f8  0000084c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .progmemx.data 0000000a  000000a4  000000a4  000000f8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 21 .text.main    00000068  00000632  00000632  00000686  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.waitFunction 0000001e  000007da  000007da  0000082e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.avrlibc 00000060  0000069a  0000069a  000006ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.avrlibc 00000450  000000ae  000000ae  00000102  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.avrlibc 00000038  0000073c  0000073c  00000790  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.avrlibc 00000078  000005ba  000005ba  0000060e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.avrlibc 000000bc  000004fe  000004fe  00000552  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.libgcc  0000000e  00000848  00000848  0000089c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
   8:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
   c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  10:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  14:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  18:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  1c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  20:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  24:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  28:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  2c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  30:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  34:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  38:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  3c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  40:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  44:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  48:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  4c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  50:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  54:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  58:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  5c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  60:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  64:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  68:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  6c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  70:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  74:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  78:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  7c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  80:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  84:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  88:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0e 94 19 03 	call	0x632	; 0x632 <main>
  9c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <_exit>

000000a0 <_exit>:
  a0:	f8 94       	cli

000000a2 <__stop_program>:
  a2:	ff cf       	rjmp	.-2      	; 0xa2 <__stop_program>

Disassembly of section .text:

00000856 <__bad_interrupt>:
 856:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.lcd_strobe_lcd_e:

000007bc <lcd_strobe_lcd_e>:
outputs:
notes:			According datasheet HD44780
Version :    	DMK, Initial code
*******************************************************************/
void lcd_strobe_lcd_e(void) {
	PORTA |= (1<<LCD_E);	// E high
 7bc:	8b b3       	in	r24, 0x1b	; 27
 7be:	80 64       	ori	r24, 0x40	; 64
 7c0:	8b bb       	out	0x1b, r24	; 27
	waitFunction(1);			// nodig
 7c2:	81 e0       	ldi	r24, 0x01	; 1
 7c4:	90 e0       	ldi	r25, 0x00	; 0
 7c6:	0e 94 ed 03 	call	0x7da	; 0x7da <waitFunction>
	PORTA &= ~(1<<LCD_E);  	// E low
 7ca:	8b b3       	in	r24, 0x1b	; 27
 7cc:	8f 7b       	andi	r24, 0xBF	; 191
 7ce:	8b bb       	out	0x1b, r24	; 27
	waitFunction(1);			// nodig?
 7d0:	81 e0       	ldi	r24, 0x01	; 1
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	0e 94 ed 03 	call	0x7da	; 0x7da <waitFunction>
 7d8:	08 95       	ret

Disassembly of section .text.init_4bits_mode:

000006fa <init_4bits_mode>:
inputs:
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void init_4bits_mode(void) {
 6fa:	cf 93       	push	r28
	// PORTC output mode and all low (also E and RS pin)
	DDRD = 0xFF;
 6fc:	8f ef       	ldi	r24, 0xFF	; 255
 6fe:	81 bb       	out	0x11, r24	; 17
	DDRA = 0xFF;
 700:	8a bb       	out	0x1a, r24	; 26
	PORTC = 0x00;
 702:	15 ba       	out	0x15, r1	; 21
	PORTA = 0x00;
 704:	1b ba       	out	0x1b, r1	; 27
	//PORTA = 0xFF;

	// Step 2 (table 12)
	PORTC = 0x20;	// function set
 706:	c0 e2       	ldi	r28, 0x20	; 32
 708:	c5 bb       	out	0x15, r28	; 21
	lcd_strobe_lcd_e();
 70a:	0e 94 de 03 	call	0x7bc	; 0x7bc <lcd_strobe_lcd_e>

	// Step 3 (table 12)
	PORTC = 0x20;   // function set
 70e:	c5 bb       	out	0x15, r28	; 21
	lcd_strobe_lcd_e();
 710:	0e 94 de 03 	call	0x7bc	; 0x7bc <lcd_strobe_lcd_e>
	PORTC = 0x80;
 714:	80 e8       	ldi	r24, 0x80	; 128
 716:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 718:	0e 94 de 03 	call	0x7bc	; 0x7bc <lcd_strobe_lcd_e>

	// Step 4 (table 12)
	PORTC = 0x00;   // Display on/off control
 71c:	15 ba       	out	0x15, r1	; 21
	lcd_strobe_lcd_e();
 71e:	0e 94 de 03 	call	0x7bc	; 0x7bc <lcd_strobe_lcd_e>
	PORTC = 0xF0;
 722:	80 ef       	ldi	r24, 0xF0	; 240
 724:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 726:	0e 94 de 03 	call	0x7bc	; 0x7bc <lcd_strobe_lcd_e>

	// Step 4 (table 12)
	PORTC = 0x00;   // Entry mode set
 72a:	15 ba       	out	0x15, r1	; 21
	lcd_strobe_lcd_e();
 72c:	0e 94 de 03 	call	0x7bc	; 0x7bc <lcd_strobe_lcd_e>
	PORTC = 0x60;
 730:	80 e6       	ldi	r24, 0x60	; 96
 732:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 734:	0e 94 de 03 	call	0x7bc	; 0x7bc <lcd_strobe_lcd_e>
}
 738:	cf 91       	pop	r28
 73a:	08 95       	ret

Disassembly of section .text.lcd_write_data:

00000774 <lcd_write_data>:
inputs:			byte - written to LCD
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void lcd_write_data(unsigned char byte) {
 774:	cf 93       	push	r28
 776:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 778:	85 bb       	out	0x15, r24	; 21
	PORTA |= (1<<LCD_RS);
 77a:	8b b3       	in	r24, 0x1b	; 27
 77c:	80 61       	ori	r24, 0x10	; 16
 77e:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 780:	0e 94 de 03 	call	0x7bc	; 0x7bc <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 784:	c2 95       	swap	r28
 786:	c0 7f       	andi	r28, 0xF0	; 240
 788:	c5 bb       	out	0x15, r28	; 21
	PORTA |= (1<<LCD_RS);
 78a:	8b b3       	in	r24, 0x1b	; 27
 78c:	80 61       	ori	r24, 0x10	; 16
 78e:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 790:	0e 94 de 03 	call	0x7bc	; 0x7bc <lcd_strobe_lcd_e>
}
 794:	cf 91       	pop	r28
 796:	08 95       	ret

Disassembly of section .text.display_text:

00000814 <display_text>:
inputs:
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void display_text(char *str) {
 814:	cf 93       	push	r28
 816:	df 93       	push	r29
 818:	ec 01       	movw	r28, r24
	// while(*str) {
	// 	lcd_write_data(*str++);
	// }

	// of met een for:
	for(;*str; str++){
 81a:	03 c0       	rjmp	.+6      	; 0x822 <display_text+0xe>
		lcd_write_data(*str);
 81c:	0e 94 ba 03 	call	0x774	; 0x774 <lcd_write_data>
	// while(*str) {
	// 	lcd_write_data(*str++);
	// }

	// of met een for:
	for(;*str; str++){
 820:	21 96       	adiw	r28, 0x01	; 1
 822:	88 81       	ld	r24, Y
 824:	81 11       	cpse	r24, r1
 826:	fa cf       	rjmp	.-12     	; 0x81c <display_text+0x8>
		lcd_write_data(*str);
	}
}
 828:	df 91       	pop	r29
 82a:	cf 91       	pop	r28
 82c:	08 95       	ret

Disassembly of section .text.lcd_write_command:

00000798 <lcd_write_command>:
inputs:			byte - written to LCD
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void lcd_write_command(unsigned char byte) {
 798:	cf 93       	push	r28
 79a:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 79c:	85 bb       	out	0x15, r24	; 21
	PORTA &= ~(1<<LCD_RS);
 79e:	8b b3       	in	r24, 0x1b	; 27
 7a0:	8f 7e       	andi	r24, 0xEF	; 239
 7a2:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 7a4:	0e 94 de 03 	call	0x7bc	; 0x7bc <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 7a8:	c2 95       	swap	r28
 7aa:	c0 7f       	andi	r28, 0xF0	; 240
 7ac:	c5 bb       	out	0x15, r28	; 21
	PORTA &= ~(1<<LCD_RS);
 7ae:	8b b3       	in	r24, 0x1b	; 27
 7b0:	8f 7e       	andi	r24, 0xEF	; 239
 7b2:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 7b4:	0e 94 de 03 	call	0x7bc	; 0x7bc <lcd_strobe_lcd_e>
}
 7b8:	cf 91       	pop	r28
 7ba:	08 95       	ret

Disassembly of section .text.lcd_clear:

0000082e <lcd_clear>:


void lcd_clear() {
	lcd_write_command (0x01);						//Leeg display
 82e:	81 e0       	ldi	r24, 0x01	; 1
 830:	0e 94 cc 03 	call	0x798	; 0x798 <lcd_write_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 834:	8f e9       	ldi	r24, 0x9F	; 159
 836:	9f e0       	ldi	r25, 0x0F	; 15
 838:	01 97       	sbiw	r24, 0x01	; 1
 83a:	f1 f7       	brne	.-4      	; 0x838 <lcd_clear+0xa>
 83c:	00 c0       	rjmp	.+0      	; 0x83e <lcd_clear+0x10>
 83e:	00 00       	nop
	_delay_ms(2);
	lcd_write_command (0x80);						//Cursor terug naar start
 840:	80 e8       	ldi	r24, 0x80	; 128
 842:	0e 94 cc 03 	call	0x798	; 0x798 <lcd_write_command>
 846:	08 95       	ret

Disassembly of section .text.lcd_init:

000007f8 <lcd_init>:
}

void lcd_init()
{
	DDRC = 0xFF;			// PORTD(7) output, PORTD(6:0) input
 7f8:	8f ef       	ldi	r24, 0xFF	; 255
 7fa:	84 bb       	out	0x14, r24	; 20
	PORTC = 0xFF;
 7fc:	85 bb       	out	0x15, r24	; 21
	
	// Init LCD
	init_4bits_mode();
 7fe:	0e 94 7d 03 	call	0x6fa	; 0x6fa <init_4bits_mode>
 802:	8f e1       	ldi	r24, 0x1F	; 31
 804:	9e e4       	ldi	r25, 0x4E	; 78
 806:	01 97       	sbiw	r24, 0x01	; 1
 808:	f1 f7       	brne	.-4      	; 0x806 <lcd_init+0xe>
 80a:	00 c0       	rjmp	.+0      	; 0x80c <lcd_init+0x14>
 80c:	00 00       	nop
	
	_delay_ms(10);
	
	lcd_clear();
 80e:	0e 94 17 04 	call	0x82e	; 0x82e <lcd_clear>
 812:	08 95       	ret

Disassembly of section .text.main:

00000632 <main>:

#include <xc.h>
#include "waiting.h"
#include "lcd.h"
int main(void)
{
 632:	cf 93       	push	r28
 634:	df 93       	push	r29
 636:	cd b7       	in	r28, 0x3d	; 61
 638:	de b7       	in	r29, 0x3e	; 62
 63a:	64 97       	sbiw	r28, 0x14	; 20
 63c:	0f b6       	in	r0, 0x3f	; 63
 63e:	f8 94       	cli
 640:	de bf       	out	0x3e, r29	; 62
 642:	0f be       	out	0x3f, r0	; 63
 644:	cd bf       	out	0x3d, r28	; 61
	lcd_init();
 646:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <lcd_init>
	char text[20];
	
	DDRF = 0x00;
 64a:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	DDRB = 0xff;
 64e:	8f ef       	ldi	r24, 0xFF	; 255
 650:	87 bb       	out	0x17, r24	; 23
	
	ADMUX = 0b11100011; 
 652:	83 ee       	ldi	r24, 0xE3	; 227
 654:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b11100001;
 656:	81 ee       	ldi	r24, 0xE1	; 225
 658:	86 b9       	out	0x06, r24	; 6
	
	
    while(1)
    {
		uint16_t temp = ADCH;
 65a:	85 b1       	in	r24, 0x05	; 5
		PORTB = temp;
 65c:	88 bb       	out	0x18, r24	; 24
		sprintf(text, "temp = %d", temp );
 65e:	1f 92       	push	r1
 660:	8f 93       	push	r24
 662:	84 ea       	ldi	r24, 0xA4	; 164
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	a0 e0       	ldi	r26, 0x00	; 0
 668:	af 93       	push	r26
 66a:	9f 93       	push	r25
 66c:	8f 93       	push	r24
 66e:	8e 01       	movw	r16, r28
 670:	0f 5f       	subi	r16, 0xFF	; 255
 672:	1f 4f       	sbci	r17, 0xFF	; 255
 674:	1f 93       	push	r17
 676:	0f 93       	push	r16
 678:	0e 94 4d 03 	call	0x69a	; 0x69a <sprintf>
		lcd_clear();
 67c:	0e 94 17 04 	call	0x82e	; 0x82e <lcd_clear>
		display_text(text);
 680:	c8 01       	movw	r24, r16
 682:	0e 94 0a 04 	call	0x814	; 0x814 <display_text>
				
		waitFunction(500);
 686:	84 ef       	ldi	r24, 0xF4	; 244
 688:	91 e0       	ldi	r25, 0x01	; 1
 68a:	0e 94 ed 03 	call	0x7da	; 0x7da <waitFunction>
 68e:	0f b6       	in	r0, 0x3f	; 63
 690:	f8 94       	cli
 692:	de bf       	out	0x3e, r29	; 62
 694:	0f be       	out	0x3f, r0	; 63
 696:	cd bf       	out	0x3d, r28	; 61
 698:	e0 cf       	rjmp	.-64     	; 0x65a <main+0x28>

Disassembly of section .text.waitFunction:

000007da <waitFunction>:
notes:			Busy wait, not very accurate. Make sure (external)
				clock value is set. This is used by _delay_ms inside
				until/delay.h
***********************/
{
	for (int i=0; i<ms; i++) {
 7da:	20 e0       	ldi	r18, 0x00	; 0
 7dc:	30 e0       	ldi	r19, 0x00	; 0
 7de:	08 c0       	rjmp	.+16     	; 0x7f0 <waitFunction+0x16>
 7e0:	ef ec       	ldi	r30, 0xCF	; 207
 7e2:	f7 e0       	ldi	r31, 0x07	; 7
 7e4:	31 97       	sbiw	r30, 0x01	; 1
 7e6:	f1 f7       	brne	.-4      	; 0x7e4 <waitFunction+0xa>
 7e8:	00 c0       	rjmp	.+0      	; 0x7ea <waitFunction+0x10>
 7ea:	00 00       	nop
 7ec:	2f 5f       	subi	r18, 0xFF	; 255
 7ee:	3f 4f       	sbci	r19, 0xFF	; 255
 7f0:	28 17       	cp	r18, r24
 7f2:	39 07       	cpc	r19, r25
 7f4:	ac f3       	brlt	.-22     	; 0x7e0 <waitFunction+0x6>
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}
 7f6:	08 95       	ret

Disassembly of section .text.avrlibc:

0000069a <sprintf>:
 69a:	0f 93       	push	r16
 69c:	1f 93       	push	r17
 69e:	cf 93       	push	r28
 6a0:	df 93       	push	r29
 6a2:	cd b7       	in	r28, 0x3d	; 61
 6a4:	de b7       	in	r29, 0x3e	; 62
 6a6:	2f 97       	sbiw	r28, 0x0f	; 15
 6a8:	0f b6       	in	r0, 0x3f	; 63
 6aa:	f8 94       	cli
 6ac:	de bf       	out	0x3e, r29	; 62
 6ae:	0f be       	out	0x3f, r0	; 63
 6b0:	cd bf       	out	0x3d, r28	; 61
 6b2:	0e 89       	ldd	r16, Y+22	; 0x16
 6b4:	1f 89       	ldd	r17, Y+23	; 0x17
 6b6:	86 e0       	ldi	r24, 0x06	; 6
 6b8:	8d 83       	std	Y+5, r24	; 0x05
 6ba:	1a 83       	std	Y+2, r17	; 0x02
 6bc:	09 83       	std	Y+1, r16	; 0x01
 6be:	8f ef       	ldi	r24, 0xFF	; 255
 6c0:	9f e7       	ldi	r25, 0x7F	; 127
 6c2:	9f 83       	std	Y+7, r25	; 0x07
 6c4:	8e 83       	std	Y+6, r24	; 0x06
 6c6:	9e 01       	movw	r18, r28
 6c8:	25 5e       	subi	r18, 0xE5	; 229
 6ca:	3f 4f       	sbci	r19, 0xFF	; 255
 6cc:	48 8d       	ldd	r20, Y+24	; 0x18
 6ce:	59 8d       	ldd	r21, Y+25	; 0x19
 6d0:	6a 8d       	ldd	r22, Y+26	; 0x1a
 6d2:	ce 01       	movw	r24, r28
 6d4:	01 96       	adiw	r24, 0x01	; 1
 6d6:	0e 94 57 00 	call	0xae	; 0xae <vfprintf>
 6da:	e8 85       	ldd	r30, Y+8	; 0x08
 6dc:	f9 85       	ldd	r31, Y+9	; 0x09
 6de:	e0 0f       	add	r30, r16
 6e0:	f1 1f       	adc	r31, r17
 6e2:	10 82       	st	Z, r1
 6e4:	2f 96       	adiw	r28, 0x0f	; 15
 6e6:	0f b6       	in	r0, 0x3f	; 63
 6e8:	f8 94       	cli
 6ea:	de bf       	out	0x3e, r29	; 62
 6ec:	0f be       	out	0x3f, r0	; 63
 6ee:	cd bf       	out	0x3d, r28	; 61
 6f0:	df 91       	pop	r29
 6f2:	cf 91       	pop	r28
 6f4:	1f 91       	pop	r17
 6f6:	0f 91       	pop	r16
 6f8:	08 95       	ret

Disassembly of section .text.avrlibc:

000000ae <vfprintf>:
  ae:	2f 92       	push	r2
  b0:	3f 92       	push	r3
  b2:	4f 92       	push	r4
  b4:	6f 92       	push	r6
  b6:	7f 92       	push	r7
  b8:	8f 92       	push	r8
  ba:	9f 92       	push	r9
  bc:	af 92       	push	r10
  be:	bf 92       	push	r11
  c0:	cf 92       	push	r12
  c2:	df 92       	push	r13
  c4:	ef 92       	push	r14
  c6:	ff 92       	push	r15
  c8:	0f 93       	push	r16
  ca:	1f 93       	push	r17
  cc:	cf 93       	push	r28
  ce:	df 93       	push	r29
  d0:	cd b7       	in	r28, 0x3d	; 61
  d2:	de b7       	in	r29, 0x3e	; 62
  d4:	62 97       	sbiw	r28, 0x12	; 18
  d6:	0f b6       	in	r0, 0x3f	; 63
  d8:	f8 94       	cli
  da:	de bf       	out	0x3e, r29	; 62
  dc:	0f be       	out	0x3f, r0	; 63
  de:	cd bf       	out	0x3d, r28	; 61
  e0:	6c 01       	movw	r12, r24
  e2:	3a 01       	movw	r6, r20
  e4:	86 2e       	mov	r8, r22
  e6:	79 01       	movw	r14, r18
  e8:	fc 01       	movw	r30, r24
  ea:	10 86       	std	Z+8, r1	; 0x08
  ec:	17 82       	std	Z+7, r1	; 0x07
  ee:	84 81       	ldd	r24, Z+4	; 0x04
  f0:	81 ff       	sbrs	r24, 1
  f2:	eb c1       	rjmp	.+982    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
  f4:	9e 01       	movw	r18, r28
  f6:	2f 5f       	subi	r18, 0xFF	; 255
  f8:	3f 4f       	sbci	r19, 0xFF	; 255
  fa:	3d 87       	std	Y+13, r19	; 0x0d
  fc:	2c 87       	std	Y+12, r18	; 0x0c
  fe:	c9 01       	movw	r24, r18
 100:	a0 e8       	ldi	r26, 0x80	; 128
 102:	88 8b       	std	Y+16, r24	; 0x10
 104:	99 8b       	std	Y+17, r25	; 0x11
 106:	aa 8b       	std	Y+18, r26	; 0x12
 108:	9f e3       	ldi	r25, 0x3F	; 63
 10a:	99 2e       	mov	r9, r25
 10c:	f3 01       	movw	r30, r6
 10e:	58 2d       	mov	r21, r8
 110:	0e 94 24 04 	call	0x848	; 0x848 <__xload_1>
 114:	86 2f       	mov	r24, r22
 116:	66 23       	and	r22, r22
 118:	09 f4       	brne	.+2      	; 0x11c <vfprintf+0x6e>
 11a:	d3 c1       	rjmp	.+934    	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 11c:	48 2d       	mov	r20, r8
 11e:	93 01       	movw	r18, r6
 120:	2f 5f       	subi	r18, 0xFF	; 255
 122:	3f 4f       	sbci	r19, 0xFF	; 255
 124:	4f 4f       	sbci	r20, 0xFF	; 255
 126:	65 32       	cpi	r22, 0x25	; 37
 128:	19 f0       	breq	.+6      	; 0x130 <vfprintf+0x82>
 12a:	39 01       	movw	r6, r18
 12c:	84 2e       	mov	r8, r20
 12e:	0b c0       	rjmp	.+22     	; 0x146 <vfprintf+0x98>
 130:	f9 01       	movw	r30, r18
 132:	54 2f       	mov	r21, r20
 134:	0e 94 24 04 	call	0x848	; 0x848 <__xload_1>
 138:	86 2f       	mov	r24, r22
 13a:	92 e0       	ldi	r25, 0x02	; 2
 13c:	69 0e       	add	r6, r25
 13e:	71 1c       	adc	r7, r1
 140:	81 1c       	adc	r8, r1
 142:	65 32       	cpi	r22, 0x25	; 37
 144:	29 f4       	brne	.+10     	; 0x150 <vfprintf+0xa2>
 146:	b6 01       	movw	r22, r12
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	0e 94 dd 02 	call	0x5ba	; 0x5ba <fputc>
 14e:	de cf       	rjmp	.-68     	; 0x10c <vfprintf+0x5e>
 150:	b1 2c       	mov	r11, r1
 152:	00 e0       	ldi	r16, 0x00	; 0
 154:	10 e0       	ldi	r17, 0x00	; 0
 156:	10 32       	cpi	r17, 0x20	; 32
 158:	a0 f4       	brcc	.+40     	; 0x182 <vfprintf+0xd4>
 15a:	8b 32       	cpi	r24, 0x2B	; 43
 15c:	69 f0       	breq	.+26     	; 0x178 <vfprintf+0xca>
 15e:	30 f4       	brcc	.+12     	; 0x16c <vfprintf+0xbe>
 160:	80 32       	cpi	r24, 0x20	; 32
 162:	59 f0       	breq	.+22     	; 0x17a <vfprintf+0xcc>
 164:	83 32       	cpi	r24, 0x23	; 35
 166:	69 f4       	brne	.+26     	; 0x182 <vfprintf+0xd4>
 168:	10 61       	ori	r17, 0x10	; 16
 16a:	2c c0       	rjmp	.+88     	; 0x1c4 <vfprintf+0x116>
 16c:	8d 32       	cpi	r24, 0x2D	; 45
 16e:	39 f0       	breq	.+14     	; 0x17e <vfprintf+0xd0>
 170:	80 33       	cpi	r24, 0x30	; 48
 172:	39 f4       	brne	.+14     	; 0x182 <vfprintf+0xd4>
 174:	11 60       	ori	r17, 0x01	; 1
 176:	26 c0       	rjmp	.+76     	; 0x1c4 <vfprintf+0x116>
 178:	12 60       	ori	r17, 0x02	; 2
 17a:	14 60       	ori	r17, 0x04	; 4
 17c:	23 c0       	rjmp	.+70     	; 0x1c4 <vfprintf+0x116>
 17e:	18 60       	ori	r17, 0x08	; 8
 180:	21 c0       	rjmp	.+66     	; 0x1c4 <vfprintf+0x116>
 182:	17 fd       	sbrc	r17, 7
 184:	2a c0       	rjmp	.+84     	; 0x1da <vfprintf+0x12c>
 186:	90 ed       	ldi	r25, 0xD0	; 208
 188:	98 0f       	add	r25, r24
 18a:	9a 30       	cpi	r25, 0x0A	; 10
 18c:	78 f4       	brcc	.+30     	; 0x1ac <vfprintf+0xfe>
 18e:	16 ff       	sbrs	r17, 6
 190:	06 c0       	rjmp	.+12     	; 0x19e <vfprintf+0xf0>
 192:	aa e0       	ldi	r26, 0x0A	; 10
 194:	ba 9e       	mul	r11, r26
 196:	90 0d       	add	r25, r0
 198:	11 24       	eor	r1, r1
 19a:	b9 2e       	mov	r11, r25
 19c:	13 c0       	rjmp	.+38     	; 0x1c4 <vfprintf+0x116>
 19e:	ea e0       	ldi	r30, 0x0A	; 10
 1a0:	0e 9f       	mul	r16, r30
 1a2:	90 0d       	add	r25, r0
 1a4:	11 24       	eor	r1, r1
 1a6:	09 2f       	mov	r16, r25
 1a8:	10 62       	ori	r17, 0x20	; 32
 1aa:	0c c0       	rjmp	.+24     	; 0x1c4 <vfprintf+0x116>
 1ac:	8e 32       	cpi	r24, 0x2E	; 46
 1ae:	21 f4       	brne	.+8      	; 0x1b8 <vfprintf+0x10a>
 1b0:	16 fd       	sbrc	r17, 6
 1b2:	87 c1       	rjmp	.+782    	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 1b4:	10 64       	ori	r17, 0x40	; 64
 1b6:	06 c0       	rjmp	.+12     	; 0x1c4 <vfprintf+0x116>
 1b8:	8c 36       	cpi	r24, 0x6C	; 108
 1ba:	11 f4       	brne	.+4      	; 0x1c0 <vfprintf+0x112>
 1bc:	10 68       	ori	r17, 0x80	; 128
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <vfprintf+0x116>
 1c0:	88 36       	cpi	r24, 0x68	; 104
 1c2:	59 f4       	brne	.+22     	; 0x1da <vfprintf+0x12c>
 1c4:	f3 01       	movw	r30, r6
 1c6:	58 2d       	mov	r21, r8
 1c8:	0e 94 24 04 	call	0x848	; 0x848 <__xload_1>
 1cc:	86 2f       	mov	r24, r22
 1ce:	ff ef       	ldi	r31, 0xFF	; 255
 1d0:	6f 1a       	sub	r6, r31
 1d2:	7f 0a       	sbc	r7, r31
 1d4:	8f 0a       	sbc	r8, r31
 1d6:	61 11       	cpse	r22, r1
 1d8:	be cf       	rjmp	.-132    	; 0x156 <vfprintf+0xa8>
 1da:	98 2f       	mov	r25, r24
 1dc:	9f 7d       	andi	r25, 0xDF	; 223
 1de:	95 54       	subi	r25, 0x45	; 69
 1e0:	93 30       	cpi	r25, 0x03	; 3
 1e2:	28 f4       	brcc	.+10     	; 0x1ee <vfprintf+0x140>
 1e4:	24 e0       	ldi	r18, 0x04	; 4
 1e6:	e2 0e       	add	r14, r18
 1e8:	f1 1c       	adc	r15, r1
 1ea:	99 82       	std	Y+1, r9	; 0x01
 1ec:	0f c0       	rjmp	.+30     	; 0x20c <vfprintf+0x15e>
 1ee:	83 36       	cpi	r24, 0x63	; 99
 1f0:	31 f0       	breq	.+12     	; 0x1fe <vfprintf+0x150>
 1f2:	83 37       	cpi	r24, 0x73	; 115
 1f4:	91 f0       	breq	.+36     	; 0x21a <vfprintf+0x16c>
 1f6:	83 35       	cpi	r24, 0x53	; 83
 1f8:	09 f0       	breq	.+2      	; 0x1fc <vfprintf+0x14e>
 1fa:	64 c0       	rjmp	.+200    	; 0x2c4 <vfprintf+0x216>
 1fc:	27 c0       	rjmp	.+78     	; 0x24c <vfprintf+0x19e>
 1fe:	f7 01       	movw	r30, r14
 200:	80 81       	ld	r24, Z
 202:	89 83       	std	Y+1, r24	; 0x01
 204:	97 01       	movw	r18, r14
 206:	2e 5f       	subi	r18, 0xFE	; 254
 208:	3f 4f       	sbci	r19, 0xFF	; 255
 20a:	79 01       	movw	r14, r18
 20c:	28 88       	ldd	r2, Y+16	; 0x10
 20e:	39 88       	ldd	r3, Y+17	; 0x11
 210:	4a 88       	ldd	r4, Y+18	; 0x12
 212:	aa 24       	eor	r10, r10
 214:	a3 94       	inc	r10
 216:	b1 2c       	mov	r11, r1
 218:	17 c0       	rjmp	.+46     	; 0x248 <vfprintf+0x19a>
 21a:	a7 01       	movw	r20, r14
 21c:	4d 5f       	subi	r20, 0xFD	; 253
 21e:	5f 4f       	sbci	r21, 0xFF	; 255
 220:	5f 87       	std	Y+15, r21	; 0x0f
 222:	4e 87       	std	Y+14, r20	; 0x0e
 224:	f7 01       	movw	r30, r14
 226:	20 80       	ld	r2, Z
 228:	31 80       	ldd	r3, Z+1	; 0x01
 22a:	42 80       	ldd	r4, Z+2	; 0x02
 22c:	16 ff       	sbrs	r17, 6
 22e:	03 c0       	rjmp	.+6      	; 0x236 <vfprintf+0x188>
 230:	4b 2d       	mov	r20, r11
 232:	50 e0       	ldi	r21, 0x00	; 0
 234:	02 c0       	rjmp	.+4      	; 0x23a <vfprintf+0x18c>
 236:	4f ef       	ldi	r20, 0xFF	; 255
 238:	5f ef       	ldi	r21, 0xFF	; 255
 23a:	84 2d       	mov	r24, r4
 23c:	b1 01       	movw	r22, r2
 23e:	0e 94 9e 03 	call	0x73c	; 0x73c <strnlen>
 242:	5c 01       	movw	r10, r24
 244:	ee 84       	ldd	r14, Y+14	; 0x0e
 246:	ff 84       	ldd	r15, Y+15	; 0x0f
 248:	1f 77       	andi	r17, 0x7F	; 127
 24a:	18 c0       	rjmp	.+48     	; 0x27c <vfprintf+0x1ce>
 24c:	97 01       	movw	r18, r14
 24e:	2d 5f       	subi	r18, 0xFD	; 253
 250:	3f 4f       	sbci	r19, 0xFF	; 255
 252:	3f 87       	std	Y+15, r19	; 0x0f
 254:	2e 87       	std	Y+14, r18	; 0x0e
 256:	f7 01       	movw	r30, r14
 258:	20 80       	ld	r2, Z
 25a:	31 80       	ldd	r3, Z+1	; 0x01
 25c:	42 80       	ldd	r4, Z+2	; 0x02
 25e:	16 ff       	sbrs	r17, 6
 260:	03 c0       	rjmp	.+6      	; 0x268 <vfprintf+0x1ba>
 262:	4b 2d       	mov	r20, r11
 264:	50 e0       	ldi	r21, 0x00	; 0
 266:	02 c0       	rjmp	.+4      	; 0x26c <vfprintf+0x1be>
 268:	4f ef       	ldi	r20, 0xFF	; 255
 26a:	5f ef       	ldi	r21, 0xFF	; 255
 26c:	84 2d       	mov	r24, r4
 26e:	b1 01       	movw	r22, r2
 270:	0e 94 9e 03 	call	0x73c	; 0x73c <strnlen>
 274:	5c 01       	movw	r10, r24
 276:	10 68       	ori	r17, 0x80	; 128
 278:	ee 84       	ldd	r14, Y+14	; 0x0e
 27a:	ff 84       	ldd	r15, Y+15	; 0x0f
 27c:	13 fd       	sbrc	r17, 3
 27e:	1e c0       	rjmp	.+60     	; 0x2bc <vfprintf+0x20e>
 280:	80 2f       	mov	r24, r16
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	a8 16       	cp	r10, r24
 286:	b9 06       	cpc	r11, r25
 288:	c8 f4       	brcc	.+50     	; 0x2bc <vfprintf+0x20e>
 28a:	b6 01       	movw	r22, r12
 28c:	80 e2       	ldi	r24, 0x20	; 32
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	0e 94 dd 02 	call	0x5ba	; 0x5ba <fputc>
 294:	01 50       	subi	r16, 0x01	; 1
 296:	f4 cf       	rjmp	.-24     	; 0x280 <vfprintf+0x1d2>
 298:	f1 01       	movw	r30, r2
 29a:	54 2d       	mov	r21, r4
 29c:	0e 94 24 04 	call	0x848	; 0x848 <__xload_1>
 2a0:	86 2f       	mov	r24, r22
 2a2:	ff ef       	ldi	r31, 0xFF	; 255
 2a4:	2f 1a       	sub	r2, r31
 2a6:	3f 0a       	sbc	r3, r31
 2a8:	4f 0a       	sbc	r4, r31
 2aa:	b6 01       	movw	r22, r12
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	0e 94 dd 02 	call	0x5ba	; 0x5ba <fputc>
 2b2:	01 11       	cpse	r16, r1
 2b4:	01 50       	subi	r16, 0x01	; 1
 2b6:	21 e0       	ldi	r18, 0x01	; 1
 2b8:	a2 1a       	sub	r10, r18
 2ba:	b1 08       	sbc	r11, r1
 2bc:	a1 14       	cp	r10, r1
 2be:	b1 04       	cpc	r11, r1
 2c0:	59 f7       	brne	.-42     	; 0x298 <vfprintf+0x1ea>
 2c2:	f5 c0       	rjmp	.+490    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 2c4:	84 36       	cpi	r24, 0x64	; 100
 2c6:	11 f0       	breq	.+4      	; 0x2cc <vfprintf+0x21e>
 2c8:	89 36       	cpi	r24, 0x69	; 105
 2ca:	71 f5       	brne	.+92     	; 0x328 <vfprintf+0x27a>
 2cc:	f7 01       	movw	r30, r14
 2ce:	17 ff       	sbrs	r17, 7
 2d0:	08 c0       	rjmp	.+16     	; 0x2e2 <vfprintf+0x234>
 2d2:	60 81       	ld	r22, Z
 2d4:	71 81       	ldd	r23, Z+1	; 0x01
 2d6:	82 81       	ldd	r24, Z+2	; 0x02
 2d8:	93 81       	ldd	r25, Z+3	; 0x03
 2da:	97 01       	movw	r18, r14
 2dc:	2c 5f       	subi	r18, 0xFC	; 252
 2de:	3f 4f       	sbci	r19, 0xFF	; 255
 2e0:	09 c0       	rjmp	.+18     	; 0x2f4 <vfprintf+0x246>
 2e2:	60 81       	ld	r22, Z
 2e4:	71 81       	ldd	r23, Z+1	; 0x01
 2e6:	07 2e       	mov	r0, r23
 2e8:	00 0c       	add	r0, r0
 2ea:	88 0b       	sbc	r24, r24
 2ec:	99 0b       	sbc	r25, r25
 2ee:	97 01       	movw	r18, r14
 2f0:	2e 5f       	subi	r18, 0xFE	; 254
 2f2:	3f 4f       	sbci	r19, 0xFF	; 255
 2f4:	79 01       	movw	r14, r18
 2f6:	1f 76       	andi	r17, 0x6F	; 111
 2f8:	31 2e       	mov	r3, r17
 2fa:	97 ff       	sbrs	r25, 7
 2fc:	0a c0       	rjmp	.+20     	; 0x312 <vfprintf+0x264>
 2fe:	90 95       	com	r25
 300:	80 95       	com	r24
 302:	70 95       	com	r23
 304:	61 95       	neg	r22
 306:	7f 4f       	sbci	r23, 0xFF	; 255
 308:	8f 4f       	sbci	r24, 0xFF	; 255
 30a:	9f 4f       	sbci	r25, 0xFF	; 255
 30c:	31 2f       	mov	r19, r17
 30e:	30 68       	ori	r19, 0x80	; 128
 310:	33 2e       	mov	r3, r19
 312:	2a e0       	ldi	r18, 0x0A	; 10
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	ae 01       	movw	r20, r28
 318:	4f 5f       	subi	r20, 0xFF	; 255
 31a:	5f 4f       	sbci	r21, 0xFF	; 255
 31c:	0e 94 7f 02 	call	0x4fe	; 0x4fe <__ultoa_invert>
 320:	48 2e       	mov	r4, r24
 322:	4c 85       	ldd	r20, Y+12	; 0x0c
 324:	44 1a       	sub	r4, r20
 326:	4a c0       	rjmp	.+148    	; 0x3bc <vfprintf+0x30e>
 328:	85 37       	cpi	r24, 0x75	; 117
 32a:	29 f4       	brne	.+10     	; 0x336 <vfprintf+0x288>
 32c:	1f 7e       	andi	r17, 0xEF	; 239
 32e:	a1 2e       	mov	r10, r17
 330:	2a e0       	ldi	r18, 0x0A	; 10
 332:	30 e0       	ldi	r19, 0x00	; 0
 334:	25 c0       	rjmp	.+74     	; 0x380 <vfprintf+0x2d2>
 336:	51 2f       	mov	r21, r17
 338:	59 7f       	andi	r21, 0xF9	; 249
 33a:	a5 2e       	mov	r10, r21
 33c:	8f 36       	cpi	r24, 0x6F	; 111
 33e:	c1 f0       	breq	.+48     	; 0x370 <vfprintf+0x2c2>
 340:	18 f4       	brcc	.+6      	; 0x348 <vfprintf+0x29a>
 342:	88 35       	cpi	r24, 0x58	; 88
 344:	79 f0       	breq	.+30     	; 0x364 <vfprintf+0x2b6>
 346:	bd c0       	rjmp	.+378    	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 348:	80 37       	cpi	r24, 0x70	; 112
 34a:	19 f0       	breq	.+6      	; 0x352 <vfprintf+0x2a4>
 34c:	88 37       	cpi	r24, 0x78	; 120
 34e:	21 f0       	breq	.+8      	; 0x358 <vfprintf+0x2aa>
 350:	b8 c0       	rjmp	.+368    	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 352:	85 2f       	mov	r24, r21
 354:	80 61       	ori	r24, 0x10	; 16
 356:	a8 2e       	mov	r10, r24
 358:	a4 fe       	sbrs	r10, 4
 35a:	0d c0       	rjmp	.+26     	; 0x376 <vfprintf+0x2c8>
 35c:	9a 2d       	mov	r25, r10
 35e:	94 60       	ori	r25, 0x04	; 4
 360:	a9 2e       	mov	r10, r25
 362:	09 c0       	rjmp	.+18     	; 0x376 <vfprintf+0x2c8>
 364:	14 ff       	sbrs	r17, 4
 366:	0a c0       	rjmp	.+20     	; 0x37c <vfprintf+0x2ce>
 368:	a5 2f       	mov	r26, r21
 36a:	a6 60       	ori	r26, 0x06	; 6
 36c:	aa 2e       	mov	r10, r26
 36e:	06 c0       	rjmp	.+12     	; 0x37c <vfprintf+0x2ce>
 370:	28 e0       	ldi	r18, 0x08	; 8
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	05 c0       	rjmp	.+10     	; 0x380 <vfprintf+0x2d2>
 376:	20 e1       	ldi	r18, 0x10	; 16
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	02 c0       	rjmp	.+4      	; 0x380 <vfprintf+0x2d2>
 37c:	20 e1       	ldi	r18, 0x10	; 16
 37e:	32 e0       	ldi	r19, 0x02	; 2
 380:	f7 01       	movw	r30, r14
 382:	a7 fe       	sbrs	r10, 7
 384:	08 c0       	rjmp	.+16     	; 0x396 <vfprintf+0x2e8>
 386:	60 81       	ld	r22, Z
 388:	71 81       	ldd	r23, Z+1	; 0x01
 38a:	82 81       	ldd	r24, Z+2	; 0x02
 38c:	93 81       	ldd	r25, Z+3	; 0x03
 38e:	a7 01       	movw	r20, r14
 390:	4c 5f       	subi	r20, 0xFC	; 252
 392:	5f 4f       	sbci	r21, 0xFF	; 255
 394:	07 c0       	rjmp	.+14     	; 0x3a4 <vfprintf+0x2f6>
 396:	60 81       	ld	r22, Z
 398:	71 81       	ldd	r23, Z+1	; 0x01
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	a7 01       	movw	r20, r14
 3a0:	4e 5f       	subi	r20, 0xFE	; 254
 3a2:	5f 4f       	sbci	r21, 0xFF	; 255
 3a4:	7a 01       	movw	r14, r20
 3a6:	ae 01       	movw	r20, r28
 3a8:	4f 5f       	subi	r20, 0xFF	; 255
 3aa:	5f 4f       	sbci	r21, 0xFF	; 255
 3ac:	0e 94 7f 02 	call	0x4fe	; 0x4fe <__ultoa_invert>
 3b0:	48 2e       	mov	r4, r24
 3b2:	5c 85       	ldd	r21, Y+12	; 0x0c
 3b4:	45 1a       	sub	r4, r21
 3b6:	8a 2d       	mov	r24, r10
 3b8:	8f 77       	andi	r24, 0x7F	; 127
 3ba:	38 2e       	mov	r3, r24
 3bc:	36 fe       	sbrs	r3, 6
 3be:	0d c0       	rjmp	.+26     	; 0x3da <vfprintf+0x32c>
 3c0:	93 2d       	mov	r25, r3
 3c2:	9e 7f       	andi	r25, 0xFE	; 254
 3c4:	a9 2e       	mov	r10, r25
 3c6:	4b 14       	cp	r4, r11
 3c8:	58 f4       	brcc	.+22     	; 0x3e0 <vfprintf+0x332>
 3ca:	34 fe       	sbrs	r3, 4
 3cc:	0b c0       	rjmp	.+22     	; 0x3e4 <vfprintf+0x336>
 3ce:	32 fc       	sbrc	r3, 2
 3d0:	09 c0       	rjmp	.+18     	; 0x3e4 <vfprintf+0x336>
 3d2:	a3 2d       	mov	r26, r3
 3d4:	ae 7e       	andi	r26, 0xEE	; 238
 3d6:	aa 2e       	mov	r10, r26
 3d8:	05 c0       	rjmp	.+10     	; 0x3e4 <vfprintf+0x336>
 3da:	14 2d       	mov	r17, r4
 3dc:	a3 2c       	mov	r10, r3
 3de:	03 c0       	rjmp	.+6      	; 0x3e6 <vfprintf+0x338>
 3e0:	14 2d       	mov	r17, r4
 3e2:	01 c0       	rjmp	.+2      	; 0x3e6 <vfprintf+0x338>
 3e4:	1b 2d       	mov	r17, r11
 3e6:	a4 fe       	sbrs	r10, 4
 3e8:	0e c0       	rjmp	.+28     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3ea:	fe 01       	movw	r30, r28
 3ec:	e4 0d       	add	r30, r4
 3ee:	f1 1d       	adc	r31, r1
 3f0:	80 81       	ld	r24, Z
 3f2:	80 33       	cpi	r24, 0x30	; 48
 3f4:	21 f4       	brne	.+8      	; 0x3fe <vfprintf+0x350>
 3f6:	ea 2d       	mov	r30, r10
 3f8:	e9 7e       	andi	r30, 0xE9	; 233
 3fa:	ae 2e       	mov	r10, r30
 3fc:	08 c0       	rjmp	.+16     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3fe:	a2 fe       	sbrs	r10, 2
 400:	05 c0       	rjmp	.+10     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 402:	1e 5f       	subi	r17, 0xFE	; 254
 404:	04 c0       	rjmp	.+8      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 406:	8a 2d       	mov	r24, r10
 408:	86 78       	andi	r24, 0x86	; 134
 40a:	09 f0       	breq	.+2      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 40c:	1f 5f       	subi	r17, 0xFF	; 255
 40e:	a3 fc       	sbrc	r10, 3
 410:	11 c0       	rjmp	.+34     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 412:	a0 fe       	sbrs	r10, 0
 414:	06 c0       	rjmp	.+12     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 416:	10 17       	cp	r17, r16
 418:	88 f4       	brcc	.+34     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 41a:	04 0d       	add	r16, r4
 41c:	b0 2e       	mov	r11, r16
 41e:	b1 1a       	sub	r11, r17
 420:	0e c0       	rjmp	.+28     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 422:	10 17       	cp	r17, r16
 424:	60 f4       	brcc	.+24     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 426:	b6 01       	movw	r22, r12
 428:	80 e2       	ldi	r24, 0x20	; 32
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	0e 94 dd 02 	call	0x5ba	; 0x5ba <fputc>
 430:	1f 5f       	subi	r17, 0xFF	; 255
 432:	f7 cf       	rjmp	.-18     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 434:	10 17       	cp	r17, r16
 436:	18 f4       	brcc	.+6      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 438:	01 1b       	sub	r16, r17
 43a:	02 c0       	rjmp	.+4      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 43c:	b4 2c       	mov	r11, r4
 43e:	00 e0       	ldi	r16, 0x00	; 0
 440:	a4 fe       	sbrs	r10, 4
 442:	10 c0       	rjmp	.+32     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 444:	b6 01       	movw	r22, r12
 446:	80 e3       	ldi	r24, 0x30	; 48
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	0e 94 dd 02 	call	0x5ba	; 0x5ba <fputc>
 44e:	a2 fe       	sbrs	r10, 2
 450:	17 c0       	rjmp	.+46     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 452:	a1 fc       	sbrc	r10, 1
 454:	03 c0       	rjmp	.+6      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 456:	88 e7       	ldi	r24, 0x78	; 120
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	02 c0       	rjmp	.+4      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 45c:	88 e5       	ldi	r24, 0x58	; 88
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	b6 01       	movw	r22, r12
 462:	0c c0       	rjmp	.+24     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 464:	8a 2d       	mov	r24, r10
 466:	86 78       	andi	r24, 0x86	; 134
 468:	59 f0       	breq	.+22     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 46a:	a1 fe       	sbrs	r10, 1
 46c:	02 c0       	rjmp	.+4      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 46e:	8b e2       	ldi	r24, 0x2B	; 43
 470:	01 c0       	rjmp	.+2      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 472:	80 e2       	ldi	r24, 0x20	; 32
 474:	a7 fc       	sbrc	r10, 7
 476:	8d e2       	ldi	r24, 0x2D	; 45
 478:	b6 01       	movw	r22, r12
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	0e 94 dd 02 	call	0x5ba	; 0x5ba <fputc>
 480:	4b 14       	cp	r4, r11
 482:	38 f4       	brcc	.+14     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 484:	b6 01       	movw	r22, r12
 486:	80 e3       	ldi	r24, 0x30	; 48
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	0e 94 dd 02 	call	0x5ba	; 0x5ba <fputc>
 48e:	ba 94       	dec	r11
 490:	f7 cf       	rjmp	.-18     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 492:	4a 94       	dec	r4
 494:	e1 e0       	ldi	r30, 0x01	; 1
 496:	f0 e0       	ldi	r31, 0x00	; 0
 498:	ec 0f       	add	r30, r28
 49a:	fd 1f       	adc	r31, r29
 49c:	e4 0d       	add	r30, r4
 49e:	f1 1d       	adc	r31, r1
 4a0:	80 81       	ld	r24, Z
 4a2:	b6 01       	movw	r22, r12
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	0e 94 dd 02 	call	0x5ba	; 0x5ba <fputc>
 4aa:	41 10       	cpse	r4, r1
 4ac:	f2 cf       	rjmp	.-28     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 4ae:	00 23       	and	r16, r16
 4b0:	09 f4       	brne	.+2      	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4b2:	2c ce       	rjmp	.-936    	; 0x10c <vfprintf+0x5e>
 4b4:	b6 01       	movw	r22, r12
 4b6:	80 e2       	ldi	r24, 0x20	; 32
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	0e 94 dd 02 	call	0x5ba	; 0x5ba <fputc>
 4be:	01 50       	subi	r16, 0x01	; 1
 4c0:	f6 cf       	rjmp	.-20     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4c2:	f6 01       	movw	r30, r12
 4c4:	87 81       	ldd	r24, Z+7	; 0x07
 4c6:	90 85       	ldd	r25, Z+8	; 0x08
 4c8:	02 c0       	rjmp	.+4      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4ca:	8f ef       	ldi	r24, 0xFF	; 255
 4cc:	9f ef       	ldi	r25, 0xFF	; 255
 4ce:	62 96       	adiw	r28, 0x12	; 18
 4d0:	0f b6       	in	r0, 0x3f	; 63
 4d2:	f8 94       	cli
 4d4:	de bf       	out	0x3e, r29	; 62
 4d6:	0f be       	out	0x3f, r0	; 63
 4d8:	cd bf       	out	0x3d, r28	; 61
 4da:	df 91       	pop	r29
 4dc:	cf 91       	pop	r28
 4de:	1f 91       	pop	r17
 4e0:	0f 91       	pop	r16
 4e2:	ff 90       	pop	r15
 4e4:	ef 90       	pop	r14
 4e6:	df 90       	pop	r13
 4e8:	cf 90       	pop	r12
 4ea:	bf 90       	pop	r11
 4ec:	af 90       	pop	r10
 4ee:	9f 90       	pop	r9
 4f0:	8f 90       	pop	r8
 4f2:	7f 90       	pop	r7
 4f4:	6f 90       	pop	r6
 4f6:	4f 90       	pop	r4
 4f8:	3f 90       	pop	r3
 4fa:	2f 90       	pop	r2
 4fc:	08 95       	ret

Disassembly of section .text.avrlibc:

0000073c <strnlen>:
 73c:	cf 92       	push	r12
 73e:	df 92       	push	r13
 740:	ef 92       	push	r14
 742:	6b 01       	movw	r12, r22
 744:	e8 2e       	mov	r14, r24
 746:	9a 01       	movw	r18, r20
 748:	a8 2f       	mov	r26, r24
 74a:	cb 01       	movw	r24, r22
 74c:	21 15       	cp	r18, r1
 74e:	31 05       	cpc	r19, r1
 750:	31 f4       	brne	.+12     	; 0x75e <strnlen+0x22>
 752:	8c 19       	sub	r24, r12
 754:	9d 09       	sbc	r25, r13
 756:	ef 90       	pop	r14
 758:	df 90       	pop	r13
 75a:	cf 90       	pop	r12
 75c:	08 95       	ret
 75e:	fc 01       	movw	r30, r24
 760:	5a 2f       	mov	r21, r26
 762:	0e 94 24 04 	call	0x848	; 0x848 <__xload_1>
 766:	66 23       	and	r22, r22
 768:	a1 f3       	breq	.-24     	; 0x752 <strnlen+0x16>
 76a:	01 96       	adiw	r24, 0x01	; 1
 76c:	a1 1d       	adc	r26, r1
 76e:	21 50       	subi	r18, 0x01	; 1
 770:	31 09       	sbc	r19, r1
 772:	ec cf       	rjmp	.-40     	; 0x74c <strnlen+0x10>

Disassembly of section .text.avrlibc:

000005ba <fputc>:
 5ba:	0f 93       	push	r16
 5bc:	1f 93       	push	r17
 5be:	cf 93       	push	r28
 5c0:	df 93       	push	r29
 5c2:	fb 01       	movw	r30, r22
 5c4:	24 81       	ldd	r18, Z+4	; 0x04
 5c6:	21 fd       	sbrc	r18, 1
 5c8:	03 c0       	rjmp	.+6      	; 0x5d0 <fputc+0x16>
 5ca:	8f ef       	ldi	r24, 0xFF	; 255
 5cc:	9f ef       	ldi	r25, 0xFF	; 255
 5ce:	2c c0       	rjmp	.+88     	; 0x628 <fputc+0x6e>
 5d0:	22 ff       	sbrs	r18, 2
 5d2:	16 c0       	rjmp	.+44     	; 0x600 <fputc+0x46>
 5d4:	47 81       	ldd	r20, Z+7	; 0x07
 5d6:	50 85       	ldd	r21, Z+8	; 0x08
 5d8:	25 81       	ldd	r18, Z+5	; 0x05
 5da:	36 81       	ldd	r19, Z+6	; 0x06
 5dc:	42 17       	cp	r20, r18
 5de:	53 07       	cpc	r21, r19
 5e0:	44 f4       	brge	.+16     	; 0x5f2 <fputc+0x38>
 5e2:	a0 81       	ld	r26, Z
 5e4:	b1 81       	ldd	r27, Z+1	; 0x01
 5e6:	9d 01       	movw	r18, r26
 5e8:	2f 5f       	subi	r18, 0xFF	; 255
 5ea:	3f 4f       	sbci	r19, 0xFF	; 255
 5ec:	31 83       	std	Z+1, r19	; 0x01
 5ee:	20 83       	st	Z, r18
 5f0:	8c 93       	st	X, r24
 5f2:	27 81       	ldd	r18, Z+7	; 0x07
 5f4:	30 85       	ldd	r19, Z+8	; 0x08
 5f6:	2f 5f       	subi	r18, 0xFF	; 255
 5f8:	3f 4f       	sbci	r19, 0xFF	; 255
 5fa:	30 87       	std	Z+8, r19	; 0x08
 5fc:	27 83       	std	Z+7, r18	; 0x07
 5fe:	14 c0       	rjmp	.+40     	; 0x628 <fputc+0x6e>
 600:	8b 01       	movw	r16, r22
 602:	ec 01       	movw	r28, r24
 604:	fb 01       	movw	r30, r22
 606:	01 84       	ldd	r0, Z+9	; 0x09
 608:	f2 85       	ldd	r31, Z+10	; 0x0a
 60a:	e0 2d       	mov	r30, r0
 60c:	09 95       	icall
 60e:	89 2b       	or	r24, r25
 610:	e1 f6       	brne	.-72     	; 0x5ca <fputc+0x10>
 612:	d8 01       	movw	r26, r16
 614:	17 96       	adiw	r26, 0x07	; 7
 616:	8d 91       	ld	r24, X+
 618:	9c 91       	ld	r25, X
 61a:	18 97       	sbiw	r26, 0x08	; 8
 61c:	01 96       	adiw	r24, 0x01	; 1
 61e:	18 96       	adiw	r26, 0x08	; 8
 620:	9c 93       	st	X, r25
 622:	8e 93       	st	-X, r24
 624:	17 97       	sbiw	r26, 0x07	; 7
 626:	ce 01       	movw	r24, r28
 628:	df 91       	pop	r29
 62a:	cf 91       	pop	r28
 62c:	1f 91       	pop	r17
 62e:	0f 91       	pop	r16
 630:	08 95       	ret

Disassembly of section .text.avrlibc:

000004fe <__ultoa_invert>:
 4fe:	fa 01       	movw	r30, r20
 500:	aa 27       	eor	r26, r26
 502:	28 30       	cpi	r18, 0x08	; 8
 504:	51 f1       	breq	.+84     	; 0x55a <__ultoa_invert+0x5c>
 506:	20 31       	cpi	r18, 0x10	; 16
 508:	81 f1       	breq	.+96     	; 0x56a <__ultoa_invert+0x6c>
 50a:	e8 94       	clt
 50c:	6f 93       	push	r22
 50e:	6e 7f       	andi	r22, 0xFE	; 254
 510:	6e 5f       	subi	r22, 0xFE	; 254
 512:	7f 4f       	sbci	r23, 0xFF	; 255
 514:	8f 4f       	sbci	r24, 0xFF	; 255
 516:	9f 4f       	sbci	r25, 0xFF	; 255
 518:	af 4f       	sbci	r26, 0xFF	; 255
 51a:	b1 e0       	ldi	r27, 0x01	; 1
 51c:	3e d0       	rcall	.+124    	; 0x59a <__ultoa_invert+0x9c>
 51e:	b4 e0       	ldi	r27, 0x04	; 4
 520:	3c d0       	rcall	.+120    	; 0x59a <__ultoa_invert+0x9c>
 522:	67 0f       	add	r22, r23
 524:	78 1f       	adc	r23, r24
 526:	89 1f       	adc	r24, r25
 528:	9a 1f       	adc	r25, r26
 52a:	a1 1d       	adc	r26, r1
 52c:	68 0f       	add	r22, r24
 52e:	79 1f       	adc	r23, r25
 530:	8a 1f       	adc	r24, r26
 532:	91 1d       	adc	r25, r1
 534:	a1 1d       	adc	r26, r1
 536:	6a 0f       	add	r22, r26
 538:	71 1d       	adc	r23, r1
 53a:	81 1d       	adc	r24, r1
 53c:	91 1d       	adc	r25, r1
 53e:	a1 1d       	adc	r26, r1
 540:	20 d0       	rcall	.+64     	; 0x582 <__ultoa_invert+0x84>
 542:	09 f4       	brne	.+2      	; 0x546 <__ultoa_invert+0x48>
 544:	68 94       	set
 546:	3f 91       	pop	r19
 548:	2a e0       	ldi	r18, 0x0A	; 10
 54a:	26 9f       	mul	r18, r22
 54c:	11 24       	eor	r1, r1
 54e:	30 19       	sub	r19, r0
 550:	30 5d       	subi	r19, 0xD0	; 208
 552:	31 93       	st	Z+, r19
 554:	de f6       	brtc	.-74     	; 0x50c <__ultoa_invert+0xe>
 556:	cf 01       	movw	r24, r30
 558:	08 95       	ret
 55a:	46 2f       	mov	r20, r22
 55c:	47 70       	andi	r20, 0x07	; 7
 55e:	40 5d       	subi	r20, 0xD0	; 208
 560:	41 93       	st	Z+, r20
 562:	b3 e0       	ldi	r27, 0x03	; 3
 564:	0f d0       	rcall	.+30     	; 0x584 <__ultoa_invert+0x86>
 566:	c9 f7       	brne	.-14     	; 0x55a <__ultoa_invert+0x5c>
 568:	f6 cf       	rjmp	.-20     	; 0x556 <__ultoa_invert+0x58>
 56a:	46 2f       	mov	r20, r22
 56c:	4f 70       	andi	r20, 0x0F	; 15
 56e:	40 5d       	subi	r20, 0xD0	; 208
 570:	4a 33       	cpi	r20, 0x3A	; 58
 572:	18 f0       	brcs	.+6      	; 0x57a <__ultoa_invert+0x7c>
 574:	49 5d       	subi	r20, 0xD9	; 217
 576:	31 fd       	sbrc	r19, 1
 578:	40 52       	subi	r20, 0x20	; 32
 57a:	41 93       	st	Z+, r20
 57c:	02 d0       	rcall	.+4      	; 0x582 <__ultoa_invert+0x84>
 57e:	a9 f7       	brne	.-22     	; 0x56a <__ultoa_invert+0x6c>
 580:	ea cf       	rjmp	.-44     	; 0x556 <__ultoa_invert+0x58>
 582:	b4 e0       	ldi	r27, 0x04	; 4
 584:	a6 95       	lsr	r26
 586:	97 95       	ror	r25
 588:	87 95       	ror	r24
 58a:	77 95       	ror	r23
 58c:	67 95       	ror	r22
 58e:	ba 95       	dec	r27
 590:	c9 f7       	brne	.-14     	; 0x584 <__ultoa_invert+0x86>
 592:	00 97       	sbiw	r24, 0x00	; 0
 594:	61 05       	cpc	r22, r1
 596:	71 05       	cpc	r23, r1
 598:	08 95       	ret
 59a:	9b 01       	movw	r18, r22
 59c:	ac 01       	movw	r20, r24
 59e:	0a 2e       	mov	r0, r26
 5a0:	06 94       	lsr	r0
 5a2:	57 95       	ror	r21
 5a4:	47 95       	ror	r20
 5a6:	37 95       	ror	r19
 5a8:	27 95       	ror	r18
 5aa:	ba 95       	dec	r27
 5ac:	c9 f7       	brne	.-14     	; 0x5a0 <__ultoa_invert+0xa2>
 5ae:	62 0f       	add	r22, r18
 5b0:	73 1f       	adc	r23, r19
 5b2:	84 1f       	adc	r24, r20
 5b4:	95 1f       	adc	r25, r21
 5b6:	a0 1d       	adc	r26, r0
 5b8:	08 95       	ret

Disassembly of section .text.libgcc:

00000848 <__xload_1>:
 848:	57 fd       	sbrc	r21, 7
 84a:	03 c0       	rjmp	.+6      	; 0x852 <__xload_1+0xa>
 84c:	5b bf       	out	0x3b, r21	; 59
 84e:	67 91       	elpm	r22, Z+
 850:	08 95       	ret
 852:	60 81       	ld	r22, Z
 854:	08 95       	ret
